G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 15)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(2, 16)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(4, 19)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(8, 18)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(10, 14)
G.add_edge(11, 12)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(14, 15)
G.add_edge(16, 17)
G.add_edge(16, 19)
G.add_edge(17, 18)
G.add_edge(17, 24)
G.add_edge(18, 20)
G.add_edge(19, 23)
G.add_edge(20, 21)
G.add_edge(20, 32)
G.add_edge(21, 22)
G.add_edge(21, 28)
G.add_edge(22, 23)
G.add_edge(22, 26)
G.add_edge(23, 24)
G.add_edge(24, 25)
G.add_edge(25, 26)
G.add_edge(25, 29)
G.add_edge(26, 27)
G.add_edge(27, 28)
G.add_edge(27, 30)
G.add_edge(28, 31)
G.add_edge(29, 30)
G.add_edge(29, 37)
G.add_edge(30, 33)
G.add_edge(31, 32)
G.add_edge(31, 33)
G.add_edge(32, 34)
G.add_edge(33, 38)
G.add_edge(34, 35)
G.add_edge(34, 38)
G.add_edge(35, 36)
G.add_edge(35, 41)
G.add_edge(36, 37)
G.add_edge(36, 39)
G.add_edge(37, 38)
G.add_edge(39, 40)
G.add_edge(39, 42)
G.add_edge(40, 41)
G.add_edge(40, 65)
G.add_edge(41, 45)
G.add_edge(42, 43)
G.add_edge(42, 53)
G.add_edge(43, 44)
G.add_edge(43, 46)
G.add_edge(44, 45)
G.add_edge(44, 48)
G.add_edge(45, 49)
G.add_edge(46, 47)
G.add_edge(46, 54)
G.add_edge(47, 48)
G.add_edge(47, 51)
G.add_edge(48, 50)
G.add_edge(49, 50)
G.add_edge(49, 59)
G.add_edge(50, 52)
G.add_edge(51, 52)
G.add_edge(51, 55)
G.add_edge(52, 57)
G.add_edge(53, 54)
G.add_edge(53, 58)
G.add_edge(54, 55)
G.add_edge(55, 56)
G.add_edge(56, 57)
G.add_edge(56, 58)
G.add_edge(57, 59)
G.add_edge(58, 60)
G.add_edge(59, 60)
G.add_edge(60, 61)
G.add_edge(61, 62)
G.add_edge(61, 68)
G.add_edge(62, 63)
G.add_edge(62, 79)
G.add_edge(63, 64)
G.add_edge(63, 78)
G.add_edge(64, 65)
G.add_edge(64, 74)
G.add_edge(65, 66)
G.add_edge(66, 67)
G.add_edge(66, 73)
G.add_edge(67, 68)
G.add_edge(67, 71)
G.add_edge(68, 69)
G.add_edge(69, 70)
G.add_edge(69, 79)
G.add_edge(70, 71)
G.add_edge(70, 75)
G.add_edge(71, 72)
G.add_edge(72, 73)
G.add_edge(72, 76)
G.add_edge(73, 74)
G.add_edge(74, 77)
G.add_edge(75, 76)
G.add_edge(75, 80)
G.add_edge(76, 77)
G.add_edge(77, 78)
G.add_edge(78, 80)
G.add_edge(79, 80)
outerSize=16
countOfVertices=81
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(81, 14)
G.add_edge(81, 13)
G.add_edge(81, 12)
G.add_edge(81, 11)
G.add_edge(81, 10)
G.add_edge(82, 2)
G.add_edge(82, 1)
G.add_edge(82, 0)
G.add_edge(82, 15)
G.add_edge(82, 14)
G.add_edge(82, 10)
G.add_edge(82, 9)
G.add_edge(82, 8)
G.add_edge(82, 16)
G.add_edge(82, 17)
G.add_edge(82, 18)
G.add_edge(83, 4)
G.add_edge(83, 3)
G.add_edge(83, 2)
G.add_edge(83, 16)
G.add_edge(83, 19)
G.add_edge(84, 18)
G.add_edge(84, 8)
G.add_edge(84, 7)
G.add_edge(84, 6)
G.add_edge(84, 5)
G.add_edge(84, 4)
G.add_edge(84, 19)
G.add_edge(84, 20)
G.add_edge(84, 21)
G.add_edge(84, 22)
G.add_edge(84, 23)
G.add_edge(85, 17)
G.add_edge(85, 16)
G.add_edge(85, 19)
G.add_edge(85, 23)
G.add_edge(85, 24)
G.add_edge(86, 24)
G.add_edge(86, 23)
G.add_edge(86, 22)
G.add_edge(86, 25)
G.add_edge(86, 26)
G.add_edge(87, 26)
G.add_edge(87, 22)
G.add_edge(87, 21)
G.add_edge(87, 27)
G.add_edge(87, 28)
G.add_edge(88, 25)
G.add_edge(88, 26)
G.add_edge(88, 27)
G.add_edge(88, 29)
G.add_edge(88, 30)
G.add_edge(89, 28)
G.add_edge(89, 21)
G.add_edge(89, 20)
G.add_edge(89, 31)
G.add_edge(89, 32)
G.add_edge(90, 30)
G.add_edge(90, 27)
G.add_edge(90, 28)
G.add_edge(90, 31)
G.add_edge(90, 33)
G.add_edge(91, 32)
G.add_edge(91, 20)
G.add_edge(91, 18)
G.add_edge(91, 17)
G.add_edge(91, 24)
G.add_edge(91, 25)
G.add_edge(91, 29)
G.add_edge(91, 34)
G.add_edge(91, 35)
G.add_edge(91, 36)
G.add_edge(91, 37)
G.add_edge(92, 34)
G.add_edge(92, 32)
G.add_edge(92, 31)
G.add_edge(92, 33)
G.add_edge(92, 38)
G.add_edge(93, 38)
G.add_edge(93, 33)
G.add_edge(93, 30)
G.add_edge(93, 29)
G.add_edge(93, 37)
G.add_edge(94, 36)
G.add_edge(94, 35)
G.add_edge(94, 39)
G.add_edge(94, 40)
G.add_edge(94, 41)
G.add_edge(95, 39)
G.add_edge(95, 36)
G.add_edge(95, 37)
G.add_edge(95, 38)
G.add_edge(95, 34)
G.add_edge(95, 35)
G.add_edge(95, 41)
G.add_edge(95, 42)
G.add_edge(95, 43)
G.add_edge(95, 44)
G.add_edge(95, 45)
G.add_edge(96, 43)
G.add_edge(96, 44)
G.add_edge(96, 46)
G.add_edge(96, 47)
G.add_edge(96, 48)
G.add_edge(97, 45)
G.add_edge(97, 44)
G.add_edge(97, 48)
G.add_edge(97, 49)
G.add_edge(97, 50)
G.add_edge(98, 47)
G.add_edge(98, 48)
G.add_edge(98, 50)
G.add_edge(98, 51)
G.add_edge(98, 52)
G.add_edge(99, 42)
G.add_edge(99, 43)
G.add_edge(99, 46)
G.add_edge(99, 53)
G.add_edge(99, 54)
G.add_edge(100, 54)
G.add_edge(100, 46)
G.add_edge(100, 47)
G.add_edge(100, 51)
G.add_edge(100, 55)
G.add_edge(101, 55)
G.add_edge(101, 51)
G.add_edge(101, 52)
G.add_edge(101, 56)
G.add_edge(101, 57)
G.add_edge(102, 53)
G.add_edge(102, 54)
G.add_edge(102, 55)
G.add_edge(102, 56)
G.add_edge(102, 58)
G.add_edge(103, 57)
G.add_edge(103, 52)
G.add_edge(103, 50)
G.add_edge(103, 49)
G.add_edge(103, 59)
G.add_edge(104, 58)
G.add_edge(104, 56)
G.add_edge(104, 57)
G.add_edge(104, 59)
G.add_edge(104, 60)
G.add_edge(105, 60)
G.add_edge(105, 59)
G.add_edge(105, 49)
G.add_edge(105, 45)
G.add_edge(105, 41)
G.add_edge(105, 40)
G.add_edge(105, 61)
G.add_edge(105, 62)
G.add_edge(105, 63)
G.add_edge(105, 64)
G.add_edge(105, 65)
G.add_edge(106, 65)
G.add_edge(106, 40)
G.add_edge(106, 39)
G.add_edge(106, 42)
G.add_edge(106, 53)
G.add_edge(106, 58)
G.add_edge(106, 60)
G.add_edge(106, 61)
G.add_edge(106, 66)
G.add_edge(106, 67)
G.add_edge(106, 68)
G.add_edge(107, 68)
G.add_edge(107, 67)
G.add_edge(107, 69)
G.add_edge(107, 70)
G.add_edge(107, 71)
G.add_edge(108, 71)
G.add_edge(108, 67)
G.add_edge(108, 66)
G.add_edge(108, 72)
G.add_edge(108, 73)
G.add_edge(109, 73)
G.add_edge(109, 66)
G.add_edge(109, 65)
G.add_edge(109, 64)
G.add_edge(109, 74)
G.add_edge(110, 70)
G.add_edge(110, 71)
G.add_edge(110, 72)
G.add_edge(110, 75)
G.add_edge(110, 76)
G.add_edge(111, 76)
G.add_edge(111, 72)
G.add_edge(111, 73)
G.add_edge(111, 74)
G.add_edge(111, 77)
G.add_edge(112, 77)
G.add_edge(112, 74)
G.add_edge(112, 64)
G.add_edge(112, 63)
G.add_edge(112, 78)
G.add_edge(113, 69)
G.add_edge(113, 70)
G.add_edge(113, 75)
G.add_edge(113, 79)
G.add_edge(113, 80)
G.add_edge(114, 80)
G.add_edge(114, 75)
G.add_edge(114, 76)
G.add_edge(114, 77)
G.add_edge(114, 78)
G.add_edge(115, 79)
G.add_edge(115, 80)
G.add_edge(115, 78)
G.add_edge(115, 63)
G.add_edge(115, 62)
G.add_edge(116, 61)
G.add_edge(116, 68)
G.add_edge(116, 69)
G.add_edge(116, 79)
G.add_edge(116, 62)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
