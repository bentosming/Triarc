G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 13)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(4, 6)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(11, 12)
G.add_edge(11, 17)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(14, 15)
G.add_edge(14, 18)
G.add_edge(15, 16)
G.add_edge(15, 18)
G.add_edge(16, 17)
G.add_edge(16, 19)
G.add_edge(17, 19)
G.add_edge(18, 28)
G.add_edge(19, 20)
G.add_edge(20, 21)
G.add_edge(20, 37)
G.add_edge(21, 22)
G.add_edge(21, 37)
G.add_edge(22, 23)
G.add_edge(22, 29)
G.add_edge(23, 24)
G.add_edge(23, 29)
G.add_edge(24, 25)
G.add_edge(24, 29)
G.add_edge(25, 26)
G.add_edge(25, 31)
G.add_edge(26, 27)
G.add_edge(26, 30)
G.add_edge(27, 28)
G.add_edge(27, 30)
G.add_edge(28, 30)
G.add_edge(31, 32)
G.add_edge(31, 38)
G.add_edge(32, 33)
G.add_edge(32, 38)
G.add_edge(33, 34)
G.add_edge(33, 53)
G.add_edge(34, 35)
G.add_edge(34, 60)
G.add_edge(35, 36)
G.add_edge(35, 56)
G.add_edge(36, 37)
G.add_edge(36, 39)
G.add_edge(38, 45)
G.add_edge(39, 40)
G.add_edge(39, 48)
G.add_edge(40, 41)
G.add_edge(40, 46)
G.add_edge(41, 42)
G.add_edge(41, 46)
G.add_edge(42, 43)
G.add_edge(42, 46)
G.add_edge(43, 44)
G.add_edge(43, 47)
G.add_edge(44, 45)
G.add_edge(44, 47)
G.add_edge(45, 47)
G.add_edge(48, 49)
G.add_edge(48, 55)
G.add_edge(49, 50)
G.add_edge(49, 55)
G.add_edge(50, 51)
G.add_edge(50, 55)
G.add_edge(51, 52)
G.add_edge(51, 54)
G.add_edge(52, 53)
G.add_edge(52, 54)
G.add_edge(53, 54)
G.add_edge(56, 57)
G.add_edge(56, 61)
G.add_edge(57, 58)
G.add_edge(57, 61)
G.add_edge(58, 59)
G.add_edge(58, 61)
G.add_edge(59, 60)
G.add_edge(59, 70)
G.add_edge(60, 62)
G.add_edge(62, 63)
G.add_edge(62, 72)
G.add_edge(63, 64)
G.add_edge(63, 72)
G.add_edge(64, 65)
G.add_edge(64, 72)
G.add_edge(65, 66)
G.add_edge(65, 71)
G.add_edge(66, 67)
G.add_edge(66, 71)
G.add_edge(67, 68)
G.add_edge(67, 71)
G.add_edge(68, 69)
G.add_edge(68, 78)
G.add_edge(69, 70)
G.add_edge(69, 73)
G.add_edge(70, 73)
G.add_edge(73, 74)
G.add_edge(74, 75)
G.add_edge(74, 79)
G.add_edge(75, 76)
G.add_edge(75, 79)
G.add_edge(76, 77)
G.add_edge(76, 79)
G.add_edge(77, 78)
G.add_edge(77, 87)
G.add_edge(78, 80)
G.add_edge(80, 81)
G.add_edge(80, 88)
G.add_edge(81, 82)
G.add_edge(81, 88)
G.add_edge(82, 83)
G.add_edge(82, 88)
G.add_edge(83, 84)
G.add_edge(83, 89)
G.add_edge(84, 85)
G.add_edge(84, 89)
G.add_edge(85, 86)
G.add_edge(85, 100)
G.add_edge(86, 87)
G.add_edge(86, 90)
G.add_edge(87, 90)
G.add_edge(89, 91)
G.add_edge(90, 97)
G.add_edge(91, 92)
G.add_edge(91, 99)
G.add_edge(92, 93)
G.add_edge(92, 99)
G.add_edge(93, 94)
G.add_edge(93, 99)
G.add_edge(94, 95)
G.add_edge(94, 98)
G.add_edge(95, 96)
G.add_edge(95, 98)
G.add_edge(96, 97)
G.add_edge(96, 98)
G.add_edge(97, 105)
G.add_edge(100, 101)
G.add_edge(100, 106)
G.add_edge(101, 102)
G.add_edge(101, 106)
G.add_edge(102, 103)
G.add_edge(102, 106)
G.add_edge(103, 104)
G.add_edge(103, 113)
G.add_edge(104, 105)
G.add_edge(104, 107)
G.add_edge(105, 107)
G.add_edge(107, 108)
G.add_edge(108, 109)
G.add_edge(108, 116)
G.add_edge(109, 110)
G.add_edge(109, 115)
G.add_edge(110, 111)
G.add_edge(110, 115)
G.add_edge(111, 112)
G.add_edge(111, 114)
G.add_edge(112, 113)
G.add_edge(112, 114)
G.add_edge(113, 114)
G.add_edge(115, 122)
G.add_edge(116, 117)
G.add_edge(116, 124)
G.add_edge(117, 118)
G.add_edge(117, 124)
G.add_edge(118, 119)
G.add_edge(118, 123)
G.add_edge(119, 120)
G.add_edge(119, 123)
G.add_edge(120, 121)
G.add_edge(120, 123)
G.add_edge(121, 122)
G.add_edge(121, 125)
G.add_edge(122, 125)
G.add_edge(124, 134)
G.add_edge(125, 126)
G.add_edge(126, 127)
G.add_edge(126, 137)
G.add_edge(127, 128)
G.add_edge(127, 137)
G.add_edge(128, 129)
G.add_edge(128, 137)
G.add_edge(129, 130)
G.add_edge(129, 135)
G.add_edge(130, 131)
G.add_edge(130, 135)
G.add_edge(131, 132)
G.add_edge(131, 135)
G.add_edge(132, 133)
G.add_edge(132, 136)
G.add_edge(133, 134)
G.add_edge(133, 136)
G.add_edge(134, 136)
outerSize=14
countOfVertices=138
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(138, 4)
G.add_edge(138, 5)
G.add_edge(138, 6)
G.add_edge(139, 13)
G.add_edge(139, 0)
G.add_edge(139, 1)
G.add_edge(139, 2)
G.add_edge(139, 3)
G.add_edge(139, 4)
G.add_edge(139, 6)
G.add_edge(139, 7)
G.add_edge(139, 8)
G.add_edge(139, 9)
G.add_edge(139, 10)
G.add_edge(139, 11)
G.add_edge(139, 14)
G.add_edge(139, 15)
G.add_edge(139, 16)
G.add_edge(139, 17)
G.add_edge(140, 14)
G.add_edge(140, 15)
G.add_edge(140, 18)
G.add_edge(141, 17)
G.add_edge(141, 16)
G.add_edge(141, 19)
G.add_edge(142, 19)
G.add_edge(142, 17)
G.add_edge(142, 11)
G.add_edge(142, 12)
G.add_edge(142, 13)
G.add_edge(142, 14)
G.add_edge(142, 18)
G.add_edge(142, 20)
G.add_edge(142, 21)
G.add_edge(142, 22)
G.add_edge(142, 23)
G.add_edge(142, 24)
G.add_edge(142, 25)
G.add_edge(142, 26)
G.add_edge(142, 27)
G.add_edge(142, 28)
G.add_edge(143, 23)
G.add_edge(143, 24)
G.add_edge(143, 29)
G.add_edge(144, 22)
G.add_edge(144, 23)
G.add_edge(144, 29)
G.add_edge(145, 26)
G.add_edge(145, 27)
G.add_edge(145, 30)
G.add_edge(146, 30)
G.add_edge(146, 27)
G.add_edge(146, 28)
G.add_edge(147, 25)
G.add_edge(147, 26)
G.add_edge(147, 30)
G.add_edge(147, 28)
G.add_edge(147, 18)
G.add_edge(147, 15)
G.add_edge(147, 16)
G.add_edge(147, 19)
G.add_edge(147, 20)
G.add_edge(147, 31)
G.add_edge(147, 32)
G.add_edge(147, 33)
G.add_edge(147, 34)
G.add_edge(147, 35)
G.add_edge(147, 36)
G.add_edge(147, 37)
G.add_edge(148, 37)
G.add_edge(148, 20)
G.add_edge(148, 21)
G.add_edge(149, 31)
G.add_edge(149, 32)
G.add_edge(149, 38)
G.add_edge(150, 36)
G.add_edge(150, 37)
G.add_edge(150, 21)
G.add_edge(150, 22)
G.add_edge(150, 29)
G.add_edge(150, 24)
G.add_edge(150, 25)
G.add_edge(150, 31)
G.add_edge(150, 38)
G.add_edge(150, 39)
G.add_edge(150, 40)
G.add_edge(150, 41)
G.add_edge(150, 42)
G.add_edge(150, 43)
G.add_edge(150, 44)
G.add_edge(150, 45)
G.add_edge(151, 41)
G.add_edge(151, 42)
G.add_edge(151, 46)
G.add_edge(152, 40)
G.add_edge(152, 41)
G.add_edge(152, 46)
G.add_edge(153, 43)
G.add_edge(153, 44)
G.add_edge(153, 47)
G.add_edge(154, 47)
G.add_edge(154, 44)
G.add_edge(154, 45)
G.add_edge(155, 39)
G.add_edge(155, 40)
G.add_edge(155, 46)
G.add_edge(155, 42)
G.add_edge(155, 43)
G.add_edge(155, 47)
G.add_edge(155, 45)
G.add_edge(155, 38)
G.add_edge(155, 32)
G.add_edge(155, 33)
G.add_edge(155, 48)
G.add_edge(155, 49)
G.add_edge(155, 50)
G.add_edge(155, 51)
G.add_edge(155, 52)
G.add_edge(155, 53)
G.add_edge(156, 51)
G.add_edge(156, 52)
G.add_edge(156, 54)
G.add_edge(157, 53)
G.add_edge(157, 52)
G.add_edge(157, 54)
G.add_edge(158, 48)
G.add_edge(158, 49)
G.add_edge(158, 55)
G.add_edge(159, 55)
G.add_edge(159, 49)
G.add_edge(159, 50)
G.add_edge(160, 35)
G.add_edge(160, 36)
G.add_edge(160, 39)
G.add_edge(160, 48)
G.add_edge(160, 55)
G.add_edge(160, 50)
G.add_edge(160, 51)
G.add_edge(160, 54)
G.add_edge(160, 53)
G.add_edge(160, 33)
G.add_edge(160, 34)
G.add_edge(160, 56)
G.add_edge(160, 57)
G.add_edge(160, 58)
G.add_edge(160, 59)
G.add_edge(160, 60)
G.add_edge(161, 57)
G.add_edge(161, 58)
G.add_edge(161, 61)
G.add_edge(162, 61)
G.add_edge(162, 57)
G.add_edge(162, 56)
G.add_edge(163, 60)
G.add_edge(163, 34)
G.add_edge(163, 35)
G.add_edge(163, 56)
G.add_edge(163, 61)
G.add_edge(163, 58)
G.add_edge(163, 59)
G.add_edge(163, 62)
G.add_edge(163, 63)
G.add_edge(163, 64)
G.add_edge(163, 65)
G.add_edge(163, 66)
G.add_edge(163, 67)
G.add_edge(163, 68)
G.add_edge(163, 69)
G.add_edge(163, 70)
G.add_edge(164, 65)
G.add_edge(164, 66)
G.add_edge(164, 71)
G.add_edge(165, 71)
G.add_edge(165, 66)
G.add_edge(165, 67)
G.add_edge(166, 62)
G.add_edge(166, 63)
G.add_edge(166, 72)
G.add_edge(167, 72)
G.add_edge(167, 63)
G.add_edge(167, 64)
G.add_edge(168, 70)
G.add_edge(168, 59)
G.add_edge(168, 60)
G.add_edge(168, 62)
G.add_edge(168, 72)
G.add_edge(168, 64)
G.add_edge(168, 65)
G.add_edge(168, 71)
G.add_edge(168, 67)
G.add_edge(168, 68)
G.add_edge(168, 73)
G.add_edge(168, 74)
G.add_edge(168, 75)
G.add_edge(168, 76)
G.add_edge(168, 77)
G.add_edge(168, 78)
G.add_edge(169, 69)
G.add_edge(169, 70)
G.add_edge(169, 73)
G.add_edge(170, 75)
G.add_edge(170, 76)
G.add_edge(170, 79)
G.add_edge(171, 74)
G.add_edge(171, 75)
G.add_edge(171, 79)
G.add_edge(172, 78)
G.add_edge(172, 68)
G.add_edge(172, 69)
G.add_edge(172, 73)
G.add_edge(172, 74)
G.add_edge(172, 79)
G.add_edge(172, 76)
G.add_edge(172, 77)
G.add_edge(172, 80)
G.add_edge(172, 81)
G.add_edge(172, 82)
G.add_edge(172, 83)
G.add_edge(172, 84)
G.add_edge(172, 85)
G.add_edge(172, 86)
G.add_edge(172, 87)
G.add_edge(173, 81)
G.add_edge(173, 82)
G.add_edge(173, 88)
G.add_edge(174, 88)
G.add_edge(174, 81)
G.add_edge(174, 80)
G.add_edge(175, 83)
G.add_edge(175, 84)
G.add_edge(175, 89)
G.add_edge(176, 86)
G.add_edge(176, 87)
G.add_edge(176, 90)
G.add_edge(177, 89)
G.add_edge(177, 83)
G.add_edge(177, 82)
G.add_edge(177, 88)
G.add_edge(177, 80)
G.add_edge(177, 78)
G.add_edge(177, 77)
G.add_edge(177, 87)
G.add_edge(177, 90)
G.add_edge(177, 91)
G.add_edge(177, 92)
G.add_edge(177, 93)
G.add_edge(177, 94)
G.add_edge(177, 95)
G.add_edge(177, 96)
G.add_edge(177, 97)
G.add_edge(178, 95)
G.add_edge(178, 94)
G.add_edge(178, 98)
G.add_edge(179, 96)
G.add_edge(179, 95)
G.add_edge(179, 98)
G.add_edge(180, 91)
G.add_edge(180, 92)
G.add_edge(180, 99)
G.add_edge(181, 99)
G.add_edge(181, 92)
G.add_edge(181, 93)
G.add_edge(182, 85)
G.add_edge(182, 84)
G.add_edge(182, 89)
G.add_edge(182, 91)
G.add_edge(182, 99)
G.add_edge(182, 93)
G.add_edge(182, 94)
G.add_edge(182, 98)
G.add_edge(182, 96)
G.add_edge(182, 97)
G.add_edge(182, 100)
G.add_edge(182, 101)
G.add_edge(182, 102)
G.add_edge(182, 103)
G.add_edge(182, 104)
G.add_edge(182, 105)
G.add_edge(183, 101)
G.add_edge(183, 102)
G.add_edge(183, 106)
G.add_edge(184, 100)
G.add_edge(184, 101)
G.add_edge(184, 106)
G.add_edge(185, 105)
G.add_edge(185, 97)
G.add_edge(185, 90)
G.add_edge(185, 86)
G.add_edge(185, 85)
G.add_edge(185, 100)
G.add_edge(185, 106)
G.add_edge(185, 102)
G.add_edge(185, 103)
G.add_edge(185, 107)
G.add_edge(185, 108)
G.add_edge(185, 109)
G.add_edge(185, 110)
G.add_edge(185, 111)
G.add_edge(185, 112)
G.add_edge(185, 113)
G.add_edge(186, 107)
G.add_edge(186, 105)
G.add_edge(186, 104)
G.add_edge(187, 112)
G.add_edge(187, 111)
G.add_edge(187, 114)
G.add_edge(188, 113)
G.add_edge(188, 112)
G.add_edge(188, 114)
G.add_edge(189, 110)
G.add_edge(189, 109)
G.add_edge(189, 115)
G.add_edge(190, 108)
G.add_edge(190, 107)
G.add_edge(190, 104)
G.add_edge(190, 103)
G.add_edge(190, 113)
G.add_edge(190, 114)
G.add_edge(190, 111)
G.add_edge(190, 110)
G.add_edge(190, 115)
G.add_edge(190, 116)
G.add_edge(190, 117)
G.add_edge(190, 118)
G.add_edge(190, 119)
G.add_edge(190, 120)
G.add_edge(190, 121)
G.add_edge(190, 122)
G.add_edge(191, 118)
G.add_edge(191, 119)
G.add_edge(191, 123)
G.add_edge(192, 120)
G.add_edge(192, 119)
G.add_edge(192, 123)
G.add_edge(193, 116)
G.add_edge(193, 117)
G.add_edge(193, 124)
G.add_edge(194, 122)
G.add_edge(194, 121)
G.add_edge(194, 125)
G.add_edge(195, 125)
G.add_edge(195, 121)
G.add_edge(195, 120)
G.add_edge(195, 123)
G.add_edge(195, 118)
G.add_edge(195, 117)
G.add_edge(195, 124)
G.add_edge(195, 126)
G.add_edge(195, 127)
G.add_edge(195, 128)
G.add_edge(195, 129)
G.add_edge(195, 130)
G.add_edge(195, 131)
G.add_edge(195, 132)
G.add_edge(195, 133)
G.add_edge(195, 134)
G.add_edge(196, 131)
G.add_edge(196, 130)
G.add_edge(196, 135)
G.add_edge(197, 135)
G.add_edge(197, 130)
G.add_edge(197, 129)
G.add_edge(198, 133)
G.add_edge(198, 132)
G.add_edge(198, 136)
G.add_edge(199, 134)
G.add_edge(199, 133)
G.add_edge(199, 136)
G.add_edge(200, 126)
G.add_edge(200, 125)
G.add_edge(200, 122)
G.add_edge(200, 115)
G.add_edge(200, 109)
G.add_edge(200, 108)
G.add_edge(200, 116)
G.add_edge(200, 124)
G.add_edge(200, 134)
G.add_edge(200, 136)
G.add_edge(200, 132)
G.add_edge(200, 131)
G.add_edge(200, 135)
G.add_edge(200, 129)
G.add_edge(200, 128)
G.add_edge(200, 137)
G.add_edge(201, 137)
G.add_edge(201, 128)
G.add_edge(201, 127)
G.add_edge(202, 126)
G.add_edge(202, 137)
G.add_edge(202, 127)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
