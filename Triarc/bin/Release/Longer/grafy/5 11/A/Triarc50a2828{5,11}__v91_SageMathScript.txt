G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 26)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(5, 6)
G.add_edge(5, 30)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(7, 11)
G.add_edge(8, 9)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(11, 12)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(13, 38)
G.add_edge(14, 15)
G.add_edge(15, 16)
G.add_edge(16, 17)
G.add_edge(17, 18)
G.add_edge(18, 19)
G.add_edge(18, 31)
G.add_edge(19, 20)
G.add_edge(20, 21)
G.add_edge(20, 24)
G.add_edge(21, 22)
G.add_edge(22, 23)
G.add_edge(23, 24)
G.add_edge(24, 25)
G.add_edge(25, 26)
G.add_edge(26, 27)
G.add_edge(27, 28)
G.add_edge(27, 34)
G.add_edge(28, 29)
G.add_edge(28, 45)
G.add_edge(29, 30)
G.add_edge(29, 42)
G.add_edge(30, 35)
G.add_edge(31, 32)
G.add_edge(31, 41)
G.add_edge(32, 33)
G.add_edge(32, 54)
G.add_edge(33, 34)
G.add_edge(33, 50)
G.add_edge(34, 44)
G.add_edge(35, 36)
G.add_edge(35, 43)
G.add_edge(36, 37)
G.add_edge(36, 51)
G.add_edge(37, 38)
G.add_edge(37, 52)
G.add_edge(38, 39)
G.add_edge(39, 40)
G.add_edge(39, 53)
G.add_edge(40, 41)
G.add_edge(40, 71)
G.add_edge(41, 58)
G.add_edge(42, 43)
G.add_edge(42, 46)
G.add_edge(43, 49)
G.add_edge(44, 45)
G.add_edge(44, 47)
G.add_edge(45, 46)
G.add_edge(46, 48)
G.add_edge(47, 48)
G.add_edge(47, 50)
G.add_edge(48, 49)
G.add_edge(49, 51)
G.add_edge(50, 51)
G.add_edge(52, 53)
G.add_edge(52, 57)
G.add_edge(53, 64)
G.add_edge(54, 55)
G.add_edge(54, 58)
G.add_edge(55, 56)
G.add_edge(55, 60)
G.add_edge(56, 57)
G.add_edge(56, 62)
G.add_edge(57, 63)
G.add_edge(58, 59)
G.add_edge(59, 60)
G.add_edge(59, 68)
G.add_edge(60, 61)
G.add_edge(61, 62)
G.add_edge(61, 66)
G.add_edge(62, 65)
G.add_edge(63, 64)
G.add_edge(63, 65)
G.add_edge(64, 69)
G.add_edge(65, 67)
G.add_edge(66, 67)
G.add_edge(66, 68)
G.add_edge(67, 69)
G.add_edge(68, 70)
G.add_edge(69, 70)
G.add_edge(70, 75)
G.add_edge(71, 72)
G.add_edge(71, 78)
G.add_edge(72, 73)
G.add_edge(72, 83)
G.add_edge(73, 74)
G.add_edge(73, 81)
G.add_edge(74, 75)
G.add_edge(74, 79)
G.add_edge(75, 76)
G.add_edge(76, 77)
G.add_edge(76, 80)
G.add_edge(77, 78)
G.add_edge(77, 86)
G.add_edge(78, 85)
G.add_edge(79, 80)
G.add_edge(79, 82)
G.add_edge(80, 90)
G.add_edge(81, 82)
G.add_edge(81, 84)
G.add_edge(82, 89)
G.add_edge(83, 84)
G.add_edge(83, 85)
G.add_edge(84, 88)
G.add_edge(85, 87)
G.add_edge(86, 87)
G.add_edge(86, 90)
G.add_edge(87, 88)
G.add_edge(88, 89)
G.add_edge(89, 90)
outerSize=27
countOfVertices=91
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(91, 7)
G.add_edge(91, 8)
G.add_edge(91, 9)
G.add_edge(91, 10)
G.add_edge(91, 11)
G.add_edge(92, 20)
G.add_edge(92, 21)
G.add_edge(92, 22)
G.add_edge(92, 23)
G.add_edge(92, 24)
G.add_edge(93, 26)
G.add_edge(93, 0)
G.add_edge(93, 1)
G.add_edge(93, 2)
G.add_edge(93, 3)
G.add_edge(93, 4)
G.add_edge(93, 5)
G.add_edge(93, 27)
G.add_edge(93, 28)
G.add_edge(93, 29)
G.add_edge(93, 30)
G.add_edge(94, 18)
G.add_edge(94, 19)
G.add_edge(94, 20)
G.add_edge(94, 24)
G.add_edge(94, 25)
G.add_edge(94, 26)
G.add_edge(94, 27)
G.add_edge(94, 31)
G.add_edge(94, 32)
G.add_edge(94, 33)
G.add_edge(94, 34)
G.add_edge(95, 30)
G.add_edge(95, 5)
G.add_edge(95, 6)
G.add_edge(95, 7)
G.add_edge(95, 11)
G.add_edge(95, 12)
G.add_edge(95, 13)
G.add_edge(95, 35)
G.add_edge(95, 36)
G.add_edge(95, 37)
G.add_edge(95, 38)
G.add_edge(96, 38)
G.add_edge(96, 13)
G.add_edge(96, 14)
G.add_edge(96, 15)
G.add_edge(96, 16)
G.add_edge(96, 17)
G.add_edge(96, 18)
G.add_edge(96, 31)
G.add_edge(96, 39)
G.add_edge(96, 40)
G.add_edge(96, 41)
G.add_edge(97, 29)
G.add_edge(97, 30)
G.add_edge(97, 35)
G.add_edge(97, 42)
G.add_edge(97, 43)
G.add_edge(98, 34)
G.add_edge(98, 27)
G.add_edge(98, 28)
G.add_edge(98, 44)
G.add_edge(98, 45)
G.add_edge(99, 45)
G.add_edge(99, 28)
G.add_edge(99, 29)
G.add_edge(99, 42)
G.add_edge(99, 46)
G.add_edge(100, 44)
G.add_edge(100, 45)
G.add_edge(100, 46)
G.add_edge(100, 47)
G.add_edge(100, 48)
G.add_edge(101, 48)
G.add_edge(101, 46)
G.add_edge(101, 42)
G.add_edge(101, 43)
G.add_edge(101, 49)
G.add_edge(102, 33)
G.add_edge(102, 34)
G.add_edge(102, 44)
G.add_edge(102, 47)
G.add_edge(102, 50)
G.add_edge(103, 49)
G.add_edge(103, 43)
G.add_edge(103, 35)
G.add_edge(103, 36)
G.add_edge(103, 51)
G.add_edge(104, 50)
G.add_edge(104, 47)
G.add_edge(104, 48)
G.add_edge(104, 49)
G.add_edge(104, 51)
G.add_edge(105, 37)
G.add_edge(105, 38)
G.add_edge(105, 39)
G.add_edge(105, 52)
G.add_edge(105, 53)
G.add_edge(106, 32)
G.add_edge(106, 33)
G.add_edge(106, 50)
G.add_edge(106, 51)
G.add_edge(106, 36)
G.add_edge(106, 37)
G.add_edge(106, 52)
G.add_edge(106, 54)
G.add_edge(106, 55)
G.add_edge(106, 56)
G.add_edge(106, 57)
G.add_edge(107, 41)
G.add_edge(107, 31)
G.add_edge(107, 32)
G.add_edge(107, 54)
G.add_edge(107, 58)
G.add_edge(108, 58)
G.add_edge(108, 54)
G.add_edge(108, 55)
G.add_edge(108, 59)
G.add_edge(108, 60)
G.add_edge(109, 60)
G.add_edge(109, 55)
G.add_edge(109, 56)
G.add_edge(109, 61)
G.add_edge(109, 62)
G.add_edge(110, 57)
G.add_edge(110, 52)
G.add_edge(110, 53)
G.add_edge(110, 63)
G.add_edge(110, 64)
G.add_edge(111, 62)
G.add_edge(111, 56)
G.add_edge(111, 57)
G.add_edge(111, 63)
G.add_edge(111, 65)
G.add_edge(112, 61)
G.add_edge(112, 62)
G.add_edge(112, 65)
G.add_edge(112, 66)
G.add_edge(112, 67)
G.add_edge(113, 59)
G.add_edge(113, 60)
G.add_edge(113, 61)
G.add_edge(113, 66)
G.add_edge(113, 68)
G.add_edge(114, 67)
G.add_edge(114, 65)
G.add_edge(114, 63)
G.add_edge(114, 64)
G.add_edge(114, 69)
G.add_edge(115, 68)
G.add_edge(115, 66)
G.add_edge(115, 67)
G.add_edge(115, 69)
G.add_edge(115, 70)
G.add_edge(116, 40)
G.add_edge(116, 41)
G.add_edge(116, 58)
G.add_edge(116, 59)
G.add_edge(116, 68)
G.add_edge(116, 70)
G.add_edge(116, 71)
G.add_edge(116, 72)
G.add_edge(116, 73)
G.add_edge(116, 74)
G.add_edge(116, 75)
G.add_edge(117, 75)
G.add_edge(117, 70)
G.add_edge(117, 69)
G.add_edge(117, 64)
G.add_edge(117, 53)
G.add_edge(117, 39)
G.add_edge(117, 40)
G.add_edge(117, 71)
G.add_edge(117, 76)
G.add_edge(117, 77)
G.add_edge(117, 78)
G.add_edge(118, 74)
G.add_edge(118, 75)
G.add_edge(118, 76)
G.add_edge(118, 79)
G.add_edge(118, 80)
G.add_edge(119, 73)
G.add_edge(119, 74)
G.add_edge(119, 79)
G.add_edge(119, 81)
G.add_edge(119, 82)
G.add_edge(120, 72)
G.add_edge(120, 73)
G.add_edge(120, 81)
G.add_edge(120, 83)
G.add_edge(120, 84)
G.add_edge(121, 78)
G.add_edge(121, 71)
G.add_edge(121, 72)
G.add_edge(121, 83)
G.add_edge(121, 85)
G.add_edge(122, 77)
G.add_edge(122, 78)
G.add_edge(122, 85)
G.add_edge(122, 86)
G.add_edge(122, 87)
G.add_edge(123, 87)
G.add_edge(123, 85)
G.add_edge(123, 83)
G.add_edge(123, 84)
G.add_edge(123, 88)
G.add_edge(124, 88)
G.add_edge(124, 84)
G.add_edge(124, 81)
G.add_edge(124, 82)
G.add_edge(124, 89)
G.add_edge(125, 86)
G.add_edge(125, 87)
G.add_edge(125, 88)
G.add_edge(125, 89)
G.add_edge(125, 90)
G.add_edge(126, 90)
G.add_edge(126, 89)
G.add_edge(126, 82)
G.add_edge(126, 79)
G.add_edge(126, 80)
G.add_edge(127, 76)
G.add_edge(127, 77)
G.add_edge(127, 86)
G.add_edge(127, 90)
G.add_edge(127, 80)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
