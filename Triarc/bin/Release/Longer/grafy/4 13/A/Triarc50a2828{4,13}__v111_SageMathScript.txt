G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 26)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(5, 6)
G.add_edge(5, 34)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(7, 34)
G.add_edge(8, 9)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(11, 12)
G.add_edge(11, 27)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(13, 27)
G.add_edge(14, 15)
G.add_edge(15, 16)
G.add_edge(16, 17)
G.add_edge(17, 18)
G.add_edge(18, 19)
G.add_edge(18, 28)
G.add_edge(19, 20)
G.add_edge(20, 21)
G.add_edge(20, 28)
G.add_edge(21, 22)
G.add_edge(22, 23)
G.add_edge(23, 24)
G.add_edge(24, 25)
G.add_edge(24, 35)
G.add_edge(25, 26)
G.add_edge(26, 35)
G.add_edge(27, 29)
G.add_edge(28, 33)
G.add_edge(29, 30)
G.add_edge(29, 43)
G.add_edge(30, 31)
G.add_edge(30, 50)
G.add_edge(31, 32)
G.add_edge(31, 52)
G.add_edge(32, 33)
G.add_edge(32, 48)
G.add_edge(33, 44)
G.add_edge(34, 39)
G.add_edge(35, 36)
G.add_edge(36, 37)
G.add_edge(36, 47)
G.add_edge(37, 38)
G.add_edge(37, 51)
G.add_edge(38, 39)
G.add_edge(38, 49)
G.add_edge(39, 40)
G.add_edge(40, 41)
G.add_edge(40, 49)
G.add_edge(41, 42)
G.add_edge(41, 54)
G.add_edge(42, 43)
G.add_edge(42, 53)
G.add_edge(43, 50)
G.add_edge(44, 45)
G.add_edge(44, 48)
G.add_edge(45, 46)
G.add_edge(45, 52)
G.add_edge(46, 47)
G.add_edge(46, 55)
G.add_edge(47, 51)
G.add_edge(48, 52)
G.add_edge(49, 51)
G.add_edge(50, 53)
G.add_edge(53, 54)
G.add_edge(54, 60)
G.add_edge(55, 56)
G.add_edge(55, 63)
G.add_edge(56, 57)
G.add_edge(56, 65)
G.add_edge(57, 58)
G.add_edge(57, 72)
G.add_edge(58, 59)
G.add_edge(58, 67)
G.add_edge(59, 60)
G.add_edge(59, 64)
G.add_edge(60, 61)
G.add_edge(61, 62)
G.add_edge(61, 64)
G.add_edge(62, 63)
G.add_edge(62, 66)
G.add_edge(63, 65)
G.add_edge(64, 66)
G.add_edge(65, 66)
G.add_edge(67, 68)
G.add_edge(67, 78)
G.add_edge(68, 69)
G.add_edge(68, 76)
G.add_edge(69, 70)
G.add_edge(69, 73)
G.add_edge(70, 71)
G.add_edge(70, 74)
G.add_edge(71, 72)
G.add_edge(71, 75)
G.add_edge(72, 77)
G.add_edge(73, 74)
G.add_edge(73, 76)
G.add_edge(74, 75)
G.add_edge(75, 77)
G.add_edge(76, 78)
G.add_edge(77, 79)
G.add_edge(78, 85)
G.add_edge(79, 80)
G.add_edge(79, 90)
G.add_edge(80, 81)
G.add_edge(80, 92)
G.add_edge(81, 82)
G.add_edge(81, 93)
G.add_edge(82, 83)
G.add_edge(82, 102)
G.add_edge(83, 84)
G.add_edge(83, 94)
G.add_edge(84, 85)
G.add_edge(84, 91)
G.add_edge(85, 86)
G.add_edge(86, 87)
G.add_edge(86, 91)
G.add_edge(87, 88)
G.add_edge(87, 94)
G.add_edge(88, 89)
G.add_edge(88, 95)
G.add_edge(89, 90)
G.add_edge(89, 93)
G.add_edge(90, 92)
G.add_edge(91, 94)
G.add_edge(92, 93)
G.add_edge(95, 96)
G.add_edge(95, 106)
G.add_edge(96, 97)
G.add_edge(96, 105)
G.add_edge(97, 98)
G.add_edge(97, 103)
G.add_edge(98, 99)
G.add_edge(98, 104)
G.add_edge(99, 100)
G.add_edge(99, 108)
G.add_edge(100, 101)
G.add_edge(100, 110)
G.add_edge(101, 102)
G.add_edge(101, 109)
G.add_edge(102, 107)
G.add_edge(103, 104)
G.add_edge(103, 105)
G.add_edge(104, 106)
G.add_edge(105, 106)
G.add_edge(107, 108)
G.add_edge(107, 109)
G.add_edge(108, 110)
G.add_edge(109, 110)
outerSize=27
countOfVertices=111
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(111, 11)
G.add_edge(111, 12)
G.add_edge(111, 13)
G.add_edge(111, 27)
G.add_edge(112, 18)
G.add_edge(112, 19)
G.add_edge(112, 20)
G.add_edge(112, 28)
G.add_edge(113, 27)
G.add_edge(113, 13)
G.add_edge(113, 14)
G.add_edge(113, 15)
G.add_edge(113, 16)
G.add_edge(113, 17)
G.add_edge(113, 18)
G.add_edge(113, 28)
G.add_edge(113, 29)
G.add_edge(113, 30)
G.add_edge(113, 31)
G.add_edge(113, 32)
G.add_edge(113, 33)
G.add_edge(114, 5)
G.add_edge(114, 6)
G.add_edge(114, 7)
G.add_edge(114, 34)
G.add_edge(115, 26)
G.add_edge(115, 0)
G.add_edge(115, 1)
G.add_edge(115, 2)
G.add_edge(115, 3)
G.add_edge(115, 4)
G.add_edge(115, 5)
G.add_edge(115, 34)
G.add_edge(115, 35)
G.add_edge(115, 36)
G.add_edge(115, 37)
G.add_edge(115, 38)
G.add_edge(115, 39)
G.add_edge(116, 39)
G.add_edge(116, 34)
G.add_edge(116, 7)
G.add_edge(116, 8)
G.add_edge(116, 9)
G.add_edge(116, 10)
G.add_edge(116, 11)
G.add_edge(116, 27)
G.add_edge(116, 29)
G.add_edge(116, 40)
G.add_edge(116, 41)
G.add_edge(116, 42)
G.add_edge(116, 43)
G.add_edge(117, 24)
G.add_edge(117, 25)
G.add_edge(117, 26)
G.add_edge(117, 35)
G.add_edge(118, 33)
G.add_edge(118, 28)
G.add_edge(118, 20)
G.add_edge(118, 21)
G.add_edge(118, 22)
G.add_edge(118, 23)
G.add_edge(118, 24)
G.add_edge(118, 35)
G.add_edge(118, 36)
G.add_edge(118, 44)
G.add_edge(118, 45)
G.add_edge(118, 46)
G.add_edge(118, 47)
G.add_edge(119, 32)
G.add_edge(119, 33)
G.add_edge(119, 44)
G.add_edge(119, 48)
G.add_edge(120, 38)
G.add_edge(120, 39)
G.add_edge(120, 40)
G.add_edge(120, 49)
G.add_edge(121, 43)
G.add_edge(121, 29)
G.add_edge(121, 30)
G.add_edge(121, 50)
G.add_edge(122, 47)
G.add_edge(122, 36)
G.add_edge(122, 37)
G.add_edge(122, 51)
G.add_edge(123, 51)
G.add_edge(123, 37)
G.add_edge(123, 38)
G.add_edge(123, 49)
G.add_edge(124, 31)
G.add_edge(124, 32)
G.add_edge(124, 48)
G.add_edge(124, 52)
G.add_edge(125, 52)
G.add_edge(125, 48)
G.add_edge(125, 44)
G.add_edge(125, 45)
G.add_edge(126, 42)
G.add_edge(126, 43)
G.add_edge(126, 50)
G.add_edge(126, 53)
G.add_edge(127, 41)
G.add_edge(127, 42)
G.add_edge(127, 53)
G.add_edge(127, 54)
G.add_edge(128, 46)
G.add_edge(128, 47)
G.add_edge(128, 51)
G.add_edge(128, 49)
G.add_edge(128, 40)
G.add_edge(128, 41)
G.add_edge(128, 54)
G.add_edge(128, 55)
G.add_edge(128, 56)
G.add_edge(128, 57)
G.add_edge(128, 58)
G.add_edge(128, 59)
G.add_edge(128, 60)
G.add_edge(129, 60)
G.add_edge(129, 54)
G.add_edge(129, 53)
G.add_edge(129, 50)
G.add_edge(129, 30)
G.add_edge(129, 31)
G.add_edge(129, 52)
G.add_edge(129, 45)
G.add_edge(129, 46)
G.add_edge(129, 55)
G.add_edge(129, 61)
G.add_edge(129, 62)
G.add_edge(129, 63)
G.add_edge(130, 59)
G.add_edge(130, 60)
G.add_edge(130, 61)
G.add_edge(130, 64)
G.add_edge(131, 63)
G.add_edge(131, 55)
G.add_edge(131, 56)
G.add_edge(131, 65)
G.add_edge(132, 64)
G.add_edge(132, 61)
G.add_edge(132, 62)
G.add_edge(132, 66)
G.add_edge(133, 66)
G.add_edge(133, 62)
G.add_edge(133, 63)
G.add_edge(133, 65)
G.add_edge(134, 58)
G.add_edge(134, 59)
G.add_edge(134, 64)
G.add_edge(134, 66)
G.add_edge(134, 65)
G.add_edge(134, 56)
G.add_edge(134, 57)
G.add_edge(134, 67)
G.add_edge(134, 68)
G.add_edge(134, 69)
G.add_edge(134, 70)
G.add_edge(134, 71)
G.add_edge(134, 72)
G.add_edge(135, 69)
G.add_edge(135, 70)
G.add_edge(135, 73)
G.add_edge(135, 74)
G.add_edge(136, 71)
G.add_edge(136, 70)
G.add_edge(136, 74)
G.add_edge(136, 75)
G.add_edge(137, 73)
G.add_edge(137, 69)
G.add_edge(137, 68)
G.add_edge(137, 76)
G.add_edge(138, 72)
G.add_edge(138, 71)
G.add_edge(138, 75)
G.add_edge(138, 77)
G.add_edge(139, 76)
G.add_edge(139, 68)
G.add_edge(139, 67)
G.add_edge(139, 78)
G.add_edge(140, 77)
G.add_edge(140, 75)
G.add_edge(140, 74)
G.add_edge(140, 73)
G.add_edge(140, 76)
G.add_edge(140, 78)
G.add_edge(140, 79)
G.add_edge(140, 80)
G.add_edge(140, 81)
G.add_edge(140, 82)
G.add_edge(140, 83)
G.add_edge(140, 84)
G.add_edge(140, 85)
G.add_edge(141, 85)
G.add_edge(141, 78)
G.add_edge(141, 67)
G.add_edge(141, 58)
G.add_edge(141, 57)
G.add_edge(141, 72)
G.add_edge(141, 77)
G.add_edge(141, 79)
G.add_edge(141, 86)
G.add_edge(141, 87)
G.add_edge(141, 88)
G.add_edge(141, 89)
G.add_edge(141, 90)
G.add_edge(142, 86)
G.add_edge(142, 85)
G.add_edge(142, 84)
G.add_edge(142, 91)
G.add_edge(143, 80)
G.add_edge(143, 79)
G.add_edge(143, 90)
G.add_edge(143, 92)
G.add_edge(144, 92)
G.add_edge(144, 90)
G.add_edge(144, 89)
G.add_edge(144, 93)
G.add_edge(145, 81)
G.add_edge(145, 80)
G.add_edge(145, 92)
G.add_edge(145, 93)
G.add_edge(146, 87)
G.add_edge(146, 86)
G.add_edge(146, 91)
G.add_edge(146, 94)
G.add_edge(147, 94)
G.add_edge(147, 91)
G.add_edge(147, 84)
G.add_edge(147, 83)
G.add_edge(148, 88)
G.add_edge(148, 87)
G.add_edge(148, 94)
G.add_edge(148, 83)
G.add_edge(148, 82)
G.add_edge(148, 95)
G.add_edge(148, 96)
G.add_edge(148, 97)
G.add_edge(148, 98)
G.add_edge(148, 99)
G.add_edge(148, 100)
G.add_edge(148, 101)
G.add_edge(148, 102)
G.add_edge(149, 97)
G.add_edge(149, 98)
G.add_edge(149, 103)
G.add_edge(149, 104)
G.add_edge(150, 103)
G.add_edge(150, 97)
G.add_edge(150, 96)
G.add_edge(150, 105)
G.add_edge(151, 105)
G.add_edge(151, 103)
G.add_edge(151, 104)
G.add_edge(151, 106)
G.add_edge(152, 95)
G.add_edge(152, 96)
G.add_edge(152, 105)
G.add_edge(152, 106)
G.add_edge(153, 102)
G.add_edge(153, 82)
G.add_edge(153, 81)
G.add_edge(153, 93)
G.add_edge(153, 89)
G.add_edge(153, 88)
G.add_edge(153, 95)
G.add_edge(153, 106)
G.add_edge(153, 104)
G.add_edge(153, 98)
G.add_edge(153, 99)
G.add_edge(153, 107)
G.add_edge(153, 108)
G.add_edge(154, 107)
G.add_edge(154, 102)
G.add_edge(154, 101)
G.add_edge(154, 109)
G.add_edge(155, 108)
G.add_edge(155, 107)
G.add_edge(155, 109)
G.add_edge(155, 110)
G.add_edge(156, 110)
G.add_edge(156, 109)
G.add_edge(156, 101)
G.add_edge(156, 100)
G.add_edge(157, 99)
G.add_edge(157, 108)
G.add_edge(157, 110)
G.add_edge(157, 100)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
