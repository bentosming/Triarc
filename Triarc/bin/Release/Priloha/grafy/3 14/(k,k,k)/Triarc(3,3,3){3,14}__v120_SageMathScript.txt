G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 17)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(2, 4)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(8, 21)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(10, 32)
G.add_edge(11, 12)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(14, 15)
G.add_edge(14, 23)
G.add_edge(15, 16)
G.add_edge(16, 17)
G.add_edge(16, 18)
G.add_edge(18, 19)
G.add_edge(18, 22)
G.add_edge(19, 20)
G.add_edge(19, 22)
G.add_edge(20, 21)
G.add_edge(20, 22)
G.add_edge(21, 29)
G.add_edge(23, 24)
G.add_edge(23, 39)
G.add_edge(24, 25)
G.add_edge(24, 30)
G.add_edge(25, 26)
G.add_edge(25, 30)
G.add_edge(26, 27)
G.add_edge(26, 30)
G.add_edge(27, 28)
G.add_edge(27, 31)
G.add_edge(28, 29)
G.add_edge(28, 31)
G.add_edge(29, 31)
G.add_edge(32, 33)
G.add_edge(32, 40)
G.add_edge(33, 34)
G.add_edge(33, 41)
G.add_edge(34, 35)
G.add_edge(34, 41)
G.add_edge(35, 36)
G.add_edge(35, 55)
G.add_edge(36, 37)
G.add_edge(36, 42)
G.add_edge(37, 38)
G.add_edge(37, 42)
G.add_edge(38, 39)
G.add_edge(38, 40)
G.add_edge(39, 40)
G.add_edge(41, 43)
G.add_edge(42, 49)
G.add_edge(43, 44)
G.add_edge(43, 51)
G.add_edge(44, 45)
G.add_edge(44, 51)
G.add_edge(45, 46)
G.add_edge(45, 51)
G.add_edge(46, 47)
G.add_edge(46, 50)
G.add_edge(47, 48)
G.add_edge(47, 50)
G.add_edge(48, 49)
G.add_edge(48, 50)
G.add_edge(49, 52)
G.add_edge(52, 53)
G.add_edge(52, 56)
G.add_edge(53, 54)
G.add_edge(53, 56)
G.add_edge(54, 55)
G.add_edge(54, 57)
G.add_edge(55, 57)
G.add_edge(56, 58)
G.add_edge(57, 63)
G.add_edge(58, 59)
G.add_edge(58, 65)
G.add_edge(59, 60)
G.add_edge(59, 69)
G.add_edge(60, 61)
G.add_edge(60, 69)
G.add_edge(61, 62)
G.add_edge(61, 64)
G.add_edge(62, 63)
G.add_edge(62, 64)
G.add_edge(63, 64)
G.add_edge(65, 66)
G.add_edge(65, 71)
G.add_edge(66, 67)
G.add_edge(66, 71)
G.add_edge(67, 68)
G.add_edge(67, 70)
G.add_edge(68, 69)
G.add_edge(68, 70)
G.add_edge(70, 78)
G.add_edge(71, 72)
G.add_edge(72, 73)
G.add_edge(72, 80)
G.add_edge(73, 74)
G.add_edge(73, 80)
G.add_edge(74, 75)
G.add_edge(74, 84)
G.add_edge(75, 76)
G.add_edge(75, 84)
G.add_edge(76, 77)
G.add_edge(76, 79)
G.add_edge(77, 78)
G.add_edge(77, 79)
G.add_edge(78, 79)
G.add_edge(80, 81)
G.add_edge(81, 82)
G.add_edge(81, 92)
G.add_edge(82, 83)
G.add_edge(82, 85)
G.add_edge(83, 84)
G.add_edge(83, 85)
G.add_edge(85, 86)
G.add_edge(86, 87)
G.add_edge(86, 94)
G.add_edge(87, 88)
G.add_edge(87, 94)
G.add_edge(88, 89)
G.add_edge(88, 93)
G.add_edge(89, 90)
G.add_edge(89, 93)
G.add_edge(90, 91)
G.add_edge(90, 93)
G.add_edge(91, 92)
G.add_edge(91, 95)
G.add_edge(92, 95)
G.add_edge(94, 96)
G.add_edge(95, 102)
G.add_edge(96, 97)
G.add_edge(96, 107)
G.add_edge(97, 98)
G.add_edge(97, 108)
G.add_edge(98, 99)
G.add_edge(98, 108)
G.add_edge(99, 100)
G.add_edge(99, 108)
G.add_edge(100, 101)
G.add_edge(100, 110)
G.add_edge(101, 102)
G.add_edge(101, 110)
G.add_edge(102, 103)
G.add_edge(103, 104)
G.add_edge(103, 109)
G.add_edge(104, 105)
G.add_edge(104, 109)
G.add_edge(105, 106)
G.add_edge(105, 109)
G.add_edge(106, 107)
G.add_edge(106, 111)
G.add_edge(107, 111)
G.add_edge(110, 112)
G.add_edge(111, 117)
G.add_edge(112, 113)
G.add_edge(112, 118)
G.add_edge(113, 114)
G.add_edge(113, 118)
G.add_edge(114, 115)
G.add_edge(114, 118)
G.add_edge(115, 116)
G.add_edge(115, 119)
G.add_edge(116, 117)
G.add_edge(116, 119)
G.add_edge(117, 119)
outerSize=18
countOfVertices=120
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(120, 2)
G.add_edge(120, 3)
G.add_edge(120, 4)
G.add_edge(121, 16)
G.add_edge(121, 17)
G.add_edge(121, 0)
G.add_edge(121, 1)
G.add_edge(121, 2)
G.add_edge(121, 4)
G.add_edge(121, 5)
G.add_edge(121, 6)
G.add_edge(121, 7)
G.add_edge(121, 8)
G.add_edge(121, 18)
G.add_edge(121, 19)
G.add_edge(121, 20)
G.add_edge(121, 21)
G.add_edge(122, 19)
G.add_edge(122, 20)
G.add_edge(122, 22)
G.add_edge(123, 18)
G.add_edge(123, 19)
G.add_edge(123, 22)
G.add_edge(124, 14)
G.add_edge(124, 15)
G.add_edge(124, 16)
G.add_edge(124, 18)
G.add_edge(124, 22)
G.add_edge(124, 20)
G.add_edge(124, 21)
G.add_edge(124, 23)
G.add_edge(124, 24)
G.add_edge(124, 25)
G.add_edge(124, 26)
G.add_edge(124, 27)
G.add_edge(124, 28)
G.add_edge(124, 29)
G.add_edge(125, 25)
G.add_edge(125, 26)
G.add_edge(125, 30)
G.add_edge(126, 24)
G.add_edge(126, 25)
G.add_edge(126, 30)
G.add_edge(127, 27)
G.add_edge(127, 28)
G.add_edge(127, 31)
G.add_edge(128, 31)
G.add_edge(128, 28)
G.add_edge(128, 29)
G.add_edge(129, 10)
G.add_edge(129, 11)
G.add_edge(129, 12)
G.add_edge(129, 13)
G.add_edge(129, 14)
G.add_edge(129, 23)
G.add_edge(129, 32)
G.add_edge(129, 33)
G.add_edge(129, 34)
G.add_edge(129, 35)
G.add_edge(129, 36)
G.add_edge(129, 37)
G.add_edge(129, 38)
G.add_edge(129, 39)
G.add_edge(130, 39)
G.add_edge(130, 23)
G.add_edge(130, 24)
G.add_edge(130, 30)
G.add_edge(130, 26)
G.add_edge(130, 27)
G.add_edge(130, 31)
G.add_edge(130, 29)
G.add_edge(130, 21)
G.add_edge(130, 8)
G.add_edge(130, 9)
G.add_edge(130, 10)
G.add_edge(130, 32)
G.add_edge(130, 40)
G.add_edge(131, 38)
G.add_edge(131, 39)
G.add_edge(131, 40)
G.add_edge(132, 33)
G.add_edge(132, 34)
G.add_edge(132, 41)
G.add_edge(133, 36)
G.add_edge(133, 37)
G.add_edge(133, 42)
G.add_edge(134, 41)
G.add_edge(134, 33)
G.add_edge(134, 32)
G.add_edge(134, 40)
G.add_edge(134, 38)
G.add_edge(134, 37)
G.add_edge(134, 42)
G.add_edge(134, 43)
G.add_edge(134, 44)
G.add_edge(134, 45)
G.add_edge(134, 46)
G.add_edge(134, 47)
G.add_edge(134, 48)
G.add_edge(134, 49)
G.add_edge(135, 47)
G.add_edge(135, 46)
G.add_edge(135, 50)
G.add_edge(136, 50)
G.add_edge(136, 47)
G.add_edge(136, 48)
G.add_edge(137, 44)
G.add_edge(137, 43)
G.add_edge(137, 51)
G.add_edge(138, 45)
G.add_edge(138, 44)
G.add_edge(138, 51)
G.add_edge(139, 49)
G.add_edge(139, 48)
G.add_edge(139, 50)
G.add_edge(139, 46)
G.add_edge(139, 45)
G.add_edge(139, 51)
G.add_edge(139, 43)
G.add_edge(139, 41)
G.add_edge(139, 34)
G.add_edge(139, 35)
G.add_edge(139, 52)
G.add_edge(139, 53)
G.add_edge(139, 54)
G.add_edge(139, 55)
G.add_edge(140, 52)
G.add_edge(140, 53)
G.add_edge(140, 56)
G.add_edge(141, 54)
G.add_edge(141, 55)
G.add_edge(141, 57)
G.add_edge(142, 56)
G.add_edge(142, 52)
G.add_edge(142, 49)
G.add_edge(142, 42)
G.add_edge(142, 36)
G.add_edge(142, 35)
G.add_edge(142, 55)
G.add_edge(142, 57)
G.add_edge(142, 58)
G.add_edge(142, 59)
G.add_edge(142, 60)
G.add_edge(142, 61)
G.add_edge(142, 62)
G.add_edge(142, 63)
G.add_edge(143, 62)
G.add_edge(143, 61)
G.add_edge(143, 64)
G.add_edge(144, 64)
G.add_edge(144, 62)
G.add_edge(144, 63)
G.add_edge(145, 58)
G.add_edge(145, 56)
G.add_edge(145, 53)
G.add_edge(145, 54)
G.add_edge(145, 57)
G.add_edge(145, 63)
G.add_edge(145, 64)
G.add_edge(145, 61)
G.add_edge(145, 60)
G.add_edge(145, 65)
G.add_edge(145, 66)
G.add_edge(145, 67)
G.add_edge(145, 68)
G.add_edge(145, 69)
G.add_edge(146, 59)
G.add_edge(146, 60)
G.add_edge(146, 69)
G.add_edge(147, 68)
G.add_edge(147, 67)
G.add_edge(147, 70)
G.add_edge(148, 65)
G.add_edge(148, 66)
G.add_edge(148, 71)
G.add_edge(149, 71)
G.add_edge(149, 65)
G.add_edge(149, 58)
G.add_edge(149, 59)
G.add_edge(149, 69)
G.add_edge(149, 68)
G.add_edge(149, 70)
G.add_edge(149, 72)
G.add_edge(149, 73)
G.add_edge(149, 74)
G.add_edge(149, 75)
G.add_edge(149, 76)
G.add_edge(149, 77)
G.add_edge(149, 78)
G.add_edge(150, 77)
G.add_edge(150, 76)
G.add_edge(150, 79)
G.add_edge(151, 79)
G.add_edge(151, 77)
G.add_edge(151, 78)
G.add_edge(152, 72)
G.add_edge(152, 71)
G.add_edge(152, 66)
G.add_edge(152, 67)
G.add_edge(152, 70)
G.add_edge(152, 78)
G.add_edge(152, 79)
G.add_edge(152, 76)
G.add_edge(152, 75)
G.add_edge(152, 80)
G.add_edge(152, 81)
G.add_edge(152, 82)
G.add_edge(152, 83)
G.add_edge(152, 84)
G.add_edge(153, 74)
G.add_edge(153, 75)
G.add_edge(153, 84)
G.add_edge(154, 80)
G.add_edge(154, 72)
G.add_edge(154, 73)
G.add_edge(155, 83)
G.add_edge(155, 82)
G.add_edge(155, 85)
G.add_edge(156, 85)
G.add_edge(156, 83)
G.add_edge(156, 84)
G.add_edge(156, 74)
G.add_edge(156, 73)
G.add_edge(156, 80)
G.add_edge(156, 81)
G.add_edge(156, 86)
G.add_edge(156, 87)
G.add_edge(156, 88)
G.add_edge(156, 89)
G.add_edge(156, 90)
G.add_edge(156, 91)
G.add_edge(156, 92)
G.add_edge(157, 88)
G.add_edge(157, 89)
G.add_edge(157, 93)
G.add_edge(158, 93)
G.add_edge(158, 89)
G.add_edge(158, 90)
G.add_edge(159, 86)
G.add_edge(159, 87)
G.add_edge(159, 94)
G.add_edge(160, 91)
G.add_edge(160, 92)
G.add_edge(160, 95)
G.add_edge(161, 94)
G.add_edge(161, 87)
G.add_edge(161, 88)
G.add_edge(161, 93)
G.add_edge(161, 90)
G.add_edge(161, 91)
G.add_edge(161, 95)
G.add_edge(161, 96)
G.add_edge(161, 97)
G.add_edge(161, 98)
G.add_edge(161, 99)
G.add_edge(161, 100)
G.add_edge(161, 101)
G.add_edge(161, 102)
G.add_edge(162, 102)
G.add_edge(162, 95)
G.add_edge(162, 92)
G.add_edge(162, 81)
G.add_edge(162, 82)
G.add_edge(162, 85)
G.add_edge(162, 86)
G.add_edge(162, 94)
G.add_edge(162, 96)
G.add_edge(162, 103)
G.add_edge(162, 104)
G.add_edge(162, 105)
G.add_edge(162, 106)
G.add_edge(162, 107)
G.add_edge(163, 98)
G.add_edge(163, 99)
G.add_edge(163, 108)
G.add_edge(164, 108)
G.add_edge(164, 98)
G.add_edge(164, 97)
G.add_edge(165, 104)
G.add_edge(165, 105)
G.add_edge(165, 109)
G.add_edge(166, 103)
G.add_edge(166, 104)
G.add_edge(166, 109)
G.add_edge(167, 100)
G.add_edge(167, 101)
G.add_edge(167, 110)
G.add_edge(168, 106)
G.add_edge(168, 107)
G.add_edge(168, 111)
G.add_edge(169, 110)
G.add_edge(169, 101)
G.add_edge(169, 102)
G.add_edge(169, 103)
G.add_edge(169, 109)
G.add_edge(169, 105)
G.add_edge(169, 106)
G.add_edge(169, 111)
G.add_edge(169, 112)
G.add_edge(169, 113)
G.add_edge(169, 114)
G.add_edge(169, 115)
G.add_edge(169, 116)
G.add_edge(169, 117)
G.add_edge(170, 113)
G.add_edge(170, 114)
G.add_edge(170, 118)
G.add_edge(171, 112)
G.add_edge(171, 113)
G.add_edge(171, 118)
G.add_edge(172, 117)
G.add_edge(172, 111)
G.add_edge(172, 107)
G.add_edge(172, 96)
G.add_edge(172, 97)
G.add_edge(172, 108)
G.add_edge(172, 99)
G.add_edge(172, 100)
G.add_edge(172, 110)
G.add_edge(172, 112)
G.add_edge(172, 118)
G.add_edge(172, 114)
G.add_edge(172, 115)
G.add_edge(172, 119)
G.add_edge(173, 116)
G.add_edge(173, 117)
G.add_edge(173, 119)
G.add_edge(174, 115)
G.add_edge(174, 116)
G.add_edge(174, 119)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
