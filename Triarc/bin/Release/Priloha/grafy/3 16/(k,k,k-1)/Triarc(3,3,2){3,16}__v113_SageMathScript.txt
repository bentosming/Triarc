G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 15)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(2, 4)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(8, 21)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(10, 23)
G.add_edge(11, 12)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(14, 15)
G.add_edge(14, 16)
G.add_edge(16, 17)
G.add_edge(16, 22)
G.add_edge(17, 18)
G.add_edge(17, 22)
G.add_edge(18, 19)
G.add_edge(18, 22)
G.add_edge(19, 20)
G.add_edge(19, 29)
G.add_edge(20, 21)
G.add_edge(20, 29)
G.add_edge(21, 32)
G.add_edge(23, 24)
G.add_edge(23, 30)
G.add_edge(24, 25)
G.add_edge(24, 30)
G.add_edge(25, 26)
G.add_edge(25, 30)
G.add_edge(26, 27)
G.add_edge(26, 31)
G.add_edge(27, 28)
G.add_edge(27, 31)
G.add_edge(28, 29)
G.add_edge(28, 46)
G.add_edge(31, 38)
G.add_edge(32, 33)
G.add_edge(32, 41)
G.add_edge(33, 34)
G.add_edge(33, 39)
G.add_edge(34, 35)
G.add_edge(34, 39)
G.add_edge(35, 36)
G.add_edge(35, 39)
G.add_edge(36, 37)
G.add_edge(36, 40)
G.add_edge(37, 38)
G.add_edge(37, 40)
G.add_edge(38, 40)
G.add_edge(41, 42)
G.add_edge(41, 47)
G.add_edge(42, 43)
G.add_edge(42, 47)
G.add_edge(43, 44)
G.add_edge(43, 47)
G.add_edge(44, 45)
G.add_edge(44, 53)
G.add_edge(45, 46)
G.add_edge(45, 48)
G.add_edge(46, 48)
G.add_edge(48, 49)
G.add_edge(49, 50)
G.add_edge(49, 54)
G.add_edge(50, 51)
G.add_edge(50, 54)
G.add_edge(51, 52)
G.add_edge(51, 54)
G.add_edge(52, 53)
G.add_edge(52, 62)
G.add_edge(53, 55)
G.add_edge(55, 56)
G.add_edge(55, 63)
G.add_edge(56, 57)
G.add_edge(56, 63)
G.add_edge(57, 58)
G.add_edge(57, 63)
G.add_edge(58, 59)
G.add_edge(58, 64)
G.add_edge(59, 60)
G.add_edge(59, 64)
G.add_edge(60, 61)
G.add_edge(60, 80)
G.add_edge(61, 62)
G.add_edge(61, 65)
G.add_edge(62, 65)
G.add_edge(64, 72)
G.add_edge(65, 66)
G.add_edge(66, 67)
G.add_edge(66, 75)
G.add_edge(67, 68)
G.add_edge(67, 73)
G.add_edge(68, 69)
G.add_edge(68, 73)
G.add_edge(69, 70)
G.add_edge(69, 73)
G.add_edge(70, 71)
G.add_edge(70, 74)
G.add_edge(71, 72)
G.add_edge(71, 74)
G.add_edge(72, 74)
G.add_edge(75, 76)
G.add_edge(75, 81)
G.add_edge(76, 77)
G.add_edge(76, 81)
G.add_edge(77, 78)
G.add_edge(77, 81)
G.add_edge(78, 79)
G.add_edge(78, 88)
G.add_edge(79, 80)
G.add_edge(79, 82)
G.add_edge(80, 82)
G.add_edge(82, 83)
G.add_edge(83, 84)
G.add_edge(83, 89)
G.add_edge(84, 85)
G.add_edge(84, 89)
G.add_edge(85, 86)
G.add_edge(85, 89)
G.add_edge(86, 87)
G.add_edge(86, 90)
G.add_edge(87, 88)
G.add_edge(87, 90)
G.add_edge(88, 91)
G.add_edge(90, 97)
G.add_edge(91, 92)
G.add_edge(91, 99)
G.add_edge(92, 93)
G.add_edge(92, 99)
G.add_edge(93, 94)
G.add_edge(93, 98)
G.add_edge(94, 95)
G.add_edge(94, 98)
G.add_edge(95, 96)
G.add_edge(95, 98)
G.add_edge(96, 97)
G.add_edge(96, 100)
G.add_edge(97, 100)
G.add_edge(99, 109)
G.add_edge(100, 101)
G.add_edge(101, 102)
G.add_edge(101, 112)
G.add_edge(102, 103)
G.add_edge(102, 112)
G.add_edge(103, 104)
G.add_edge(103, 112)
G.add_edge(104, 105)
G.add_edge(104, 110)
G.add_edge(105, 106)
G.add_edge(105, 110)
G.add_edge(106, 107)
G.add_edge(106, 110)
G.add_edge(107, 108)
G.add_edge(107, 111)
G.add_edge(108, 109)
G.add_edge(108, 111)
G.add_edge(109, 111)
outerSize=16
countOfVertices=113
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(113, 2)
G.add_edge(113, 3)
G.add_edge(113, 4)
G.add_edge(114, 14)
G.add_edge(114, 15)
G.add_edge(114, 0)
G.add_edge(114, 1)
G.add_edge(114, 2)
G.add_edge(114, 4)
G.add_edge(114, 5)
G.add_edge(114, 6)
G.add_edge(114, 7)
G.add_edge(114, 8)
G.add_edge(114, 16)
G.add_edge(114, 17)
G.add_edge(114, 18)
G.add_edge(114, 19)
G.add_edge(114, 20)
G.add_edge(114, 21)
G.add_edge(115, 17)
G.add_edge(115, 18)
G.add_edge(115, 22)
G.add_edge(116, 16)
G.add_edge(116, 17)
G.add_edge(116, 22)
G.add_edge(117, 10)
G.add_edge(117, 11)
G.add_edge(117, 12)
G.add_edge(117, 13)
G.add_edge(117, 14)
G.add_edge(117, 16)
G.add_edge(117, 22)
G.add_edge(117, 18)
G.add_edge(117, 19)
G.add_edge(117, 23)
G.add_edge(117, 24)
G.add_edge(117, 25)
G.add_edge(117, 26)
G.add_edge(117, 27)
G.add_edge(117, 28)
G.add_edge(117, 29)
G.add_edge(118, 29)
G.add_edge(118, 19)
G.add_edge(118, 20)
G.add_edge(119, 24)
G.add_edge(119, 25)
G.add_edge(119, 30)
G.add_edge(120, 23)
G.add_edge(120, 24)
G.add_edge(120, 30)
G.add_edge(121, 26)
G.add_edge(121, 27)
G.add_edge(121, 31)
G.add_edge(122, 21)
G.add_edge(122, 8)
G.add_edge(122, 9)
G.add_edge(122, 10)
G.add_edge(122, 23)
G.add_edge(122, 30)
G.add_edge(122, 25)
G.add_edge(122, 26)
G.add_edge(122, 31)
G.add_edge(122, 32)
G.add_edge(122, 33)
G.add_edge(122, 34)
G.add_edge(122, 35)
G.add_edge(122, 36)
G.add_edge(122, 37)
G.add_edge(122, 38)
G.add_edge(123, 34)
G.add_edge(123, 35)
G.add_edge(123, 39)
G.add_edge(124, 33)
G.add_edge(124, 34)
G.add_edge(124, 39)
G.add_edge(125, 37)
G.add_edge(125, 38)
G.add_edge(125, 40)
G.add_edge(126, 40)
G.add_edge(126, 37)
G.add_edge(126, 36)
G.add_edge(127, 32)
G.add_edge(127, 33)
G.add_edge(127, 39)
G.add_edge(127, 35)
G.add_edge(127, 36)
G.add_edge(127, 40)
G.add_edge(127, 38)
G.add_edge(127, 31)
G.add_edge(127, 27)
G.add_edge(127, 28)
G.add_edge(127, 41)
G.add_edge(127, 42)
G.add_edge(127, 43)
G.add_edge(127, 44)
G.add_edge(127, 45)
G.add_edge(127, 46)
G.add_edge(128, 42)
G.add_edge(128, 43)
G.add_edge(128, 47)
G.add_edge(129, 47)
G.add_edge(129, 42)
G.add_edge(129, 41)
G.add_edge(130, 46)
G.add_edge(130, 28)
G.add_edge(130, 29)
G.add_edge(130, 20)
G.add_edge(130, 21)
G.add_edge(130, 32)
G.add_edge(130, 41)
G.add_edge(130, 47)
G.add_edge(130, 43)
G.add_edge(130, 44)
G.add_edge(130, 48)
G.add_edge(130, 49)
G.add_edge(130, 50)
G.add_edge(130, 51)
G.add_edge(130, 52)
G.add_edge(130, 53)
G.add_edge(131, 45)
G.add_edge(131, 46)
G.add_edge(131, 48)
G.add_edge(132, 50)
G.add_edge(132, 51)
G.add_edge(132, 54)
G.add_edge(133, 54)
G.add_edge(133, 50)
G.add_edge(133, 49)
G.add_edge(134, 53)
G.add_edge(134, 44)
G.add_edge(134, 45)
G.add_edge(134, 48)
G.add_edge(134, 49)
G.add_edge(134, 54)
G.add_edge(134, 51)
G.add_edge(134, 52)
G.add_edge(134, 55)
G.add_edge(134, 56)
G.add_edge(134, 57)
G.add_edge(134, 58)
G.add_edge(134, 59)
G.add_edge(134, 60)
G.add_edge(134, 61)
G.add_edge(134, 62)
G.add_edge(135, 56)
G.add_edge(135, 57)
G.add_edge(135, 63)
G.add_edge(136, 63)
G.add_edge(136, 56)
G.add_edge(136, 55)
G.add_edge(137, 58)
G.add_edge(137, 59)
G.add_edge(137, 64)
G.add_edge(138, 61)
G.add_edge(138, 62)
G.add_edge(138, 65)
G.add_edge(139, 65)
G.add_edge(139, 62)
G.add_edge(139, 52)
G.add_edge(139, 53)
G.add_edge(139, 55)
G.add_edge(139, 63)
G.add_edge(139, 57)
G.add_edge(139, 58)
G.add_edge(139, 64)
G.add_edge(139, 66)
G.add_edge(139, 67)
G.add_edge(139, 68)
G.add_edge(139, 69)
G.add_edge(139, 70)
G.add_edge(139, 71)
G.add_edge(139, 72)
G.add_edge(140, 68)
G.add_edge(140, 69)
G.add_edge(140, 73)
G.add_edge(141, 67)
G.add_edge(141, 68)
G.add_edge(141, 73)
G.add_edge(142, 71)
G.add_edge(142, 72)
G.add_edge(142, 74)
G.add_edge(143, 70)
G.add_edge(143, 71)
G.add_edge(143, 74)
G.add_edge(144, 66)
G.add_edge(144, 67)
G.add_edge(144, 73)
G.add_edge(144, 69)
G.add_edge(144, 70)
G.add_edge(144, 74)
G.add_edge(144, 72)
G.add_edge(144, 64)
G.add_edge(144, 59)
G.add_edge(144, 60)
G.add_edge(144, 75)
G.add_edge(144, 76)
G.add_edge(144, 77)
G.add_edge(144, 78)
G.add_edge(144, 79)
G.add_edge(144, 80)
G.add_edge(145, 76)
G.add_edge(145, 77)
G.add_edge(145, 81)
G.add_edge(146, 81)
G.add_edge(146, 76)
G.add_edge(146, 75)
G.add_edge(147, 80)
G.add_edge(147, 60)
G.add_edge(147, 61)
G.add_edge(147, 65)
G.add_edge(147, 66)
G.add_edge(147, 75)
G.add_edge(147, 81)
G.add_edge(147, 77)
G.add_edge(147, 78)
G.add_edge(147, 82)
G.add_edge(147, 83)
G.add_edge(147, 84)
G.add_edge(147, 85)
G.add_edge(147, 86)
G.add_edge(147, 87)
G.add_edge(147, 88)
G.add_edge(148, 79)
G.add_edge(148, 80)
G.add_edge(148, 82)
G.add_edge(149, 84)
G.add_edge(149, 85)
G.add_edge(149, 89)
G.add_edge(150, 89)
G.add_edge(150, 84)
G.add_edge(150, 83)
G.add_edge(151, 86)
G.add_edge(151, 87)
G.add_edge(151, 90)
G.add_edge(152, 88)
G.add_edge(152, 78)
G.add_edge(152, 79)
G.add_edge(152, 82)
G.add_edge(152, 83)
G.add_edge(152, 89)
G.add_edge(152, 85)
G.add_edge(152, 86)
G.add_edge(152, 90)
G.add_edge(152, 91)
G.add_edge(152, 92)
G.add_edge(152, 93)
G.add_edge(152, 94)
G.add_edge(152, 95)
G.add_edge(152, 96)
G.add_edge(152, 97)
G.add_edge(153, 93)
G.add_edge(153, 94)
G.add_edge(153, 98)
G.add_edge(154, 95)
G.add_edge(154, 94)
G.add_edge(154, 98)
G.add_edge(155, 91)
G.add_edge(155, 92)
G.add_edge(155, 99)
G.add_edge(156, 96)
G.add_edge(156, 97)
G.add_edge(156, 100)
G.add_edge(157, 100)
G.add_edge(157, 96)
G.add_edge(157, 95)
G.add_edge(157, 98)
G.add_edge(157, 93)
G.add_edge(157, 92)
G.add_edge(157, 99)
G.add_edge(157, 101)
G.add_edge(157, 102)
G.add_edge(157, 103)
G.add_edge(157, 104)
G.add_edge(157, 105)
G.add_edge(157, 106)
G.add_edge(157, 107)
G.add_edge(157, 108)
G.add_edge(157, 109)
G.add_edge(158, 106)
G.add_edge(158, 105)
G.add_edge(158, 110)
G.add_edge(159, 104)
G.add_edge(159, 105)
G.add_edge(159, 110)
G.add_edge(160, 109)
G.add_edge(160, 108)
G.add_edge(160, 111)
G.add_edge(161, 107)
G.add_edge(161, 108)
G.add_edge(161, 111)
G.add_edge(162, 103)
G.add_edge(162, 102)
G.add_edge(162, 112)
G.add_edge(163, 101)
G.add_edge(163, 100)
G.add_edge(163, 97)
G.add_edge(163, 90)
G.add_edge(163, 87)
G.add_edge(163, 88)
G.add_edge(163, 91)
G.add_edge(163, 99)
G.add_edge(163, 109)
G.add_edge(163, 111)
G.add_edge(163, 107)
G.add_edge(163, 106)
G.add_edge(163, 110)
G.add_edge(163, 104)
G.add_edge(163, 103)
G.add_edge(163, 112)
G.add_edge(164, 101)
G.add_edge(164, 102)
G.add_edge(164, 112)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
