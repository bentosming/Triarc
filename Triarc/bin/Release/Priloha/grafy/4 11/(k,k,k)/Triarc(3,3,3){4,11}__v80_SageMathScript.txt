G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 17)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(2, 27)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(4, 27)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(8, 19)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(10, 19)
G.add_edge(11, 12)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(14, 15)
G.add_edge(14, 18)
G.add_edge(15, 16)
G.add_edge(16, 17)
G.add_edge(16, 18)
G.add_edge(18, 20)
G.add_edge(19, 23)
G.add_edge(20, 21)
G.add_edge(20, 29)
G.add_edge(21, 22)
G.add_edge(21, 36)
G.add_edge(22, 23)
G.add_edge(22, 31)
G.add_edge(23, 24)
G.add_edge(24, 25)
G.add_edge(24, 31)
G.add_edge(25, 26)
G.add_edge(25, 30)
G.add_edge(26, 27)
G.add_edge(26, 28)
G.add_edge(28, 29)
G.add_edge(28, 30)
G.add_edge(29, 32)
G.add_edge(30, 31)
G.add_edge(32, 33)
G.add_edge(32, 40)
G.add_edge(33, 34)
G.add_edge(33, 37)
G.add_edge(34, 35)
G.add_edge(34, 38)
G.add_edge(35, 36)
G.add_edge(35, 39)
G.add_edge(36, 41)
G.add_edge(37, 38)
G.add_edge(37, 40)
G.add_edge(38, 39)
G.add_edge(39, 41)
G.add_edge(40, 42)
G.add_edge(41, 47)
G.add_edge(42, 43)
G.add_edge(42, 49)
G.add_edge(43, 44)
G.add_edge(43, 54)
G.add_edge(44, 45)
G.add_edge(44, 53)
G.add_edge(45, 46)
G.add_edge(45, 52)
G.add_edge(46, 47)
G.add_edge(46, 50)
G.add_edge(47, 48)
G.add_edge(48, 49)
G.add_edge(48, 50)
G.add_edge(49, 51)
G.add_edge(50, 51)
G.add_edge(51, 56)
G.add_edge(52, 53)
G.add_edge(52, 55)
G.add_edge(53, 54)
G.add_edge(54, 55)
G.add_edge(55, 60)
G.add_edge(56, 57)
G.add_edge(56, 63)
G.add_edge(57, 58)
G.add_edge(57, 70)
G.add_edge(58, 59)
G.add_edge(58, 69)
G.add_edge(59, 60)
G.add_edge(59, 68)
G.add_edge(60, 61)
G.add_edge(61, 62)
G.add_edge(61, 66)
G.add_edge(62, 63)
G.add_edge(62, 65)
G.add_edge(63, 64)
G.add_edge(64, 65)
G.add_edge(64, 67)
G.add_edge(65, 66)
G.add_edge(66, 67)
G.add_edge(67, 72)
G.add_edge(68, 69)
G.add_edge(68, 71)
G.add_edge(69, 70)
G.add_edge(70, 71)
G.add_edge(71, 75)
G.add_edge(72, 73)
G.add_edge(72, 77)
G.add_edge(73, 74)
G.add_edge(73, 79)
G.add_edge(74, 75)
G.add_edge(74, 78)
G.add_edge(75, 76)
G.add_edge(76, 77)
G.add_edge(76, 78)
G.add_edge(77, 79)
G.add_edge(78, 79)
outerSize=18
countOfVertices=80
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(80, 16)
G.add_edge(80, 15)
G.add_edge(80, 14)
G.add_edge(80, 18)
G.add_edge(81, 10)
G.add_edge(81, 9)
G.add_edge(81, 8)
G.add_edge(81, 19)
G.add_edge(82, 18)
G.add_edge(82, 14)
G.add_edge(82, 13)
G.add_edge(82, 12)
G.add_edge(82, 11)
G.add_edge(82, 10)
G.add_edge(82, 19)
G.add_edge(82, 20)
G.add_edge(82, 21)
G.add_edge(82, 22)
G.add_edge(82, 23)
G.add_edge(83, 23)
G.add_edge(83, 19)
G.add_edge(83, 8)
G.add_edge(83, 7)
G.add_edge(83, 6)
G.add_edge(83, 5)
G.add_edge(83, 4)
G.add_edge(83, 24)
G.add_edge(83, 25)
G.add_edge(83, 26)
G.add_edge(83, 27)
G.add_edge(84, 27)
G.add_edge(84, 4)
G.add_edge(84, 3)
G.add_edge(84, 2)
G.add_edge(85, 26)
G.add_edge(85, 27)
G.add_edge(85, 2)
G.add_edge(85, 1)
G.add_edge(85, 0)
G.add_edge(85, 17)
G.add_edge(85, 16)
G.add_edge(85, 18)
G.add_edge(85, 20)
G.add_edge(85, 28)
G.add_edge(85, 29)
G.add_edge(86, 28)
G.add_edge(86, 26)
G.add_edge(86, 25)
G.add_edge(86, 30)
G.add_edge(87, 24)
G.add_edge(87, 23)
G.add_edge(87, 22)
G.add_edge(87, 31)
G.add_edge(88, 30)
G.add_edge(88, 25)
G.add_edge(88, 24)
G.add_edge(88, 31)
G.add_edge(89, 29)
G.add_edge(89, 28)
G.add_edge(89, 30)
G.add_edge(89, 31)
G.add_edge(89, 22)
G.add_edge(89, 21)
G.add_edge(89, 32)
G.add_edge(89, 33)
G.add_edge(89, 34)
G.add_edge(89, 35)
G.add_edge(89, 36)
G.add_edge(90, 33)
G.add_edge(90, 34)
G.add_edge(90, 37)
G.add_edge(90, 38)
G.add_edge(91, 35)
G.add_edge(91, 34)
G.add_edge(91, 38)
G.add_edge(91, 39)
G.add_edge(92, 32)
G.add_edge(92, 33)
G.add_edge(92, 37)
G.add_edge(92, 40)
G.add_edge(93, 39)
G.add_edge(93, 35)
G.add_edge(93, 36)
G.add_edge(93, 41)
G.add_edge(94, 40)
G.add_edge(94, 37)
G.add_edge(94, 38)
G.add_edge(94, 39)
G.add_edge(94, 41)
G.add_edge(94, 42)
G.add_edge(94, 43)
G.add_edge(94, 44)
G.add_edge(94, 45)
G.add_edge(94, 46)
G.add_edge(94, 47)
G.add_edge(95, 47)
G.add_edge(95, 41)
G.add_edge(95, 36)
G.add_edge(95, 21)
G.add_edge(95, 20)
G.add_edge(95, 29)
G.add_edge(95, 32)
G.add_edge(95, 40)
G.add_edge(95, 42)
G.add_edge(95, 48)
G.add_edge(95, 49)
G.add_edge(96, 48)
G.add_edge(96, 47)
G.add_edge(96, 46)
G.add_edge(96, 50)
G.add_edge(97, 49)
G.add_edge(97, 48)
G.add_edge(97, 50)
G.add_edge(97, 51)
G.add_edge(98, 45)
G.add_edge(98, 44)
G.add_edge(98, 52)
G.add_edge(98, 53)
G.add_edge(99, 53)
G.add_edge(99, 44)
G.add_edge(99, 43)
G.add_edge(99, 54)
G.add_edge(100, 52)
G.add_edge(100, 53)
G.add_edge(100, 54)
G.add_edge(100, 55)
G.add_edge(101, 51)
G.add_edge(101, 50)
G.add_edge(101, 46)
G.add_edge(101, 45)
G.add_edge(101, 52)
G.add_edge(101, 55)
G.add_edge(101, 56)
G.add_edge(101, 57)
G.add_edge(101, 58)
G.add_edge(101, 59)
G.add_edge(101, 60)
G.add_edge(102, 60)
G.add_edge(102, 55)
G.add_edge(102, 54)
G.add_edge(102, 43)
G.add_edge(102, 42)
G.add_edge(102, 49)
G.add_edge(102, 51)
G.add_edge(102, 56)
G.add_edge(102, 61)
G.add_edge(102, 62)
G.add_edge(102, 63)
G.add_edge(103, 63)
G.add_edge(103, 62)
G.add_edge(103, 64)
G.add_edge(103, 65)
G.add_edge(104, 65)
G.add_edge(104, 62)
G.add_edge(104, 61)
G.add_edge(104, 66)
G.add_edge(105, 64)
G.add_edge(105, 65)
G.add_edge(105, 66)
G.add_edge(105, 67)
G.add_edge(106, 59)
G.add_edge(106, 58)
G.add_edge(106, 68)
G.add_edge(106, 69)
G.add_edge(107, 69)
G.add_edge(107, 58)
G.add_edge(107, 57)
G.add_edge(107, 70)
G.add_edge(108, 68)
G.add_edge(108, 69)
G.add_edge(108, 70)
G.add_edge(108, 71)
G.add_edge(109, 67)
G.add_edge(109, 66)
G.add_edge(109, 61)
G.add_edge(109, 60)
G.add_edge(109, 59)
G.add_edge(109, 68)
G.add_edge(109, 71)
G.add_edge(109, 72)
G.add_edge(109, 73)
G.add_edge(109, 74)
G.add_edge(109, 75)
G.add_edge(110, 75)
G.add_edge(110, 71)
G.add_edge(110, 70)
G.add_edge(110, 57)
G.add_edge(110, 56)
G.add_edge(110, 63)
G.add_edge(110, 64)
G.add_edge(110, 67)
G.add_edge(110, 72)
G.add_edge(110, 76)
G.add_edge(110, 77)
G.add_edge(111, 76)
G.add_edge(111, 75)
G.add_edge(111, 74)
G.add_edge(111, 78)
G.add_edge(112, 77)
G.add_edge(112, 76)
G.add_edge(112, 78)
G.add_edge(112, 79)
G.add_edge(113, 79)
G.add_edge(113, 78)
G.add_edge(113, 74)
G.add_edge(113, 73)
G.add_edge(114, 72)
G.add_edge(114, 77)
G.add_edge(114, 79)
G.add_edge(114, 73)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
