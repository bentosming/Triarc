G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 17)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(2, 18)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(4, 18)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(8, 21)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(10, 24)
G.add_edge(11, 12)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(14, 15)
G.add_edge(14, 22)
G.add_edge(15, 16)
G.add_edge(16, 17)
G.add_edge(16, 22)
G.add_edge(18, 19)
G.add_edge(19, 20)
G.add_edge(19, 23)
G.add_edge(20, 21)
G.add_edge(20, 31)
G.add_edge(21, 30)
G.add_edge(22, 23)
G.add_edge(23, 25)
G.add_edge(24, 25)
G.add_edge(24, 26)
G.add_edge(25, 27)
G.add_edge(26, 27)
G.add_edge(26, 28)
G.add_edge(27, 32)
G.add_edge(28, 29)
G.add_edge(28, 40)
G.add_edge(29, 30)
G.add_edge(29, 34)
G.add_edge(30, 31)
G.add_edge(31, 34)
G.add_edge(32, 33)
G.add_edge(32, 35)
G.add_edge(33, 34)
G.add_edge(33, 36)
G.add_edge(35, 36)
G.add_edge(35, 41)
G.add_edge(36, 37)
G.add_edge(37, 38)
G.add_edge(37, 41)
G.add_edge(38, 39)
G.add_edge(38, 43)
G.add_edge(39, 40)
G.add_edge(39, 44)
G.add_edge(40, 42)
G.add_edge(41, 43)
G.add_edge(42, 43)
G.add_edge(42, 49)
G.add_edge(44, 45)
G.add_edge(44, 52)
G.add_edge(45, 46)
G.add_edge(45, 54)
G.add_edge(46, 47)
G.add_edge(46, 56)
G.add_edge(47, 48)
G.add_edge(47, 55)
G.add_edge(48, 49)
G.add_edge(48, 53)
G.add_edge(49, 50)
G.add_edge(50, 51)
G.add_edge(50, 53)
G.add_edge(51, 52)
G.add_edge(51, 55)
G.add_edge(52, 54)
G.add_edge(53, 55)
G.add_edge(54, 58)
G.add_edge(56, 57)
G.add_edge(56, 59)
G.add_edge(57, 58)
G.add_edge(57, 60)
G.add_edge(58, 61)
G.add_edge(59, 60)
G.add_edge(59, 62)
G.add_edge(60, 61)
G.add_edge(61, 67)
G.add_edge(62, 63)
G.add_edge(62, 67)
G.add_edge(63, 64)
G.add_edge(63, 70)
G.add_edge(64, 65)
G.add_edge(64, 68)
G.add_edge(65, 66)
G.add_edge(65, 69)
G.add_edge(66, 67)
G.add_edge(66, 76)
G.add_edge(68, 69)
G.add_edge(68, 70)
G.add_edge(69, 71)
G.add_edge(70, 71)
G.add_edge(71, 72)
G.add_edge(72, 73)
G.add_edge(72, 77)
G.add_edge(73, 74)
G.add_edge(73, 78)
G.add_edge(74, 75)
G.add_edge(74, 79)
G.add_edge(75, 76)
G.add_edge(75, 80)
G.add_edge(76, 77)
G.add_edge(77, 85)
G.add_edge(78, 79)
G.add_edge(78, 81)
G.add_edge(79, 80)
G.add_edge(80, 81)
G.add_edge(81, 82)
G.add_edge(82, 83)
G.add_edge(82, 87)
G.add_edge(83, 84)
G.add_edge(83, 89)
G.add_edge(84, 85)
G.add_edge(84, 88)
G.add_edge(85, 86)
G.add_edge(86, 87)
G.add_edge(86, 88)
G.add_edge(87, 89)
G.add_edge(88, 89)
outerSize=18
countOfVertices=90
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(90, 2)
G.add_edge(90, 3)
G.add_edge(90, 4)
G.add_edge(90, 18)
G.add_edge(91, 18)
G.add_edge(91, 4)
G.add_edge(91, 5)
G.add_edge(91, 6)
G.add_edge(91, 7)
G.add_edge(91, 8)
G.add_edge(91, 19)
G.add_edge(91, 20)
G.add_edge(91, 21)
G.add_edge(92, 16)
G.add_edge(92, 17)
G.add_edge(92, 0)
G.add_edge(92, 1)
G.add_edge(92, 2)
G.add_edge(92, 18)
G.add_edge(92, 19)
G.add_edge(92, 22)
G.add_edge(92, 23)
G.add_edge(93, 14)
G.add_edge(93, 15)
G.add_edge(93, 16)
G.add_edge(93, 22)
G.add_edge(94, 10)
G.add_edge(94, 11)
G.add_edge(94, 12)
G.add_edge(94, 13)
G.add_edge(94, 14)
G.add_edge(94, 22)
G.add_edge(94, 23)
G.add_edge(94, 24)
G.add_edge(94, 25)
G.add_edge(95, 24)
G.add_edge(95, 25)
G.add_edge(95, 26)
G.add_edge(95, 27)
G.add_edge(96, 26)
G.add_edge(96, 24)
G.add_edge(96, 10)
G.add_edge(96, 9)
G.add_edge(96, 8)
G.add_edge(96, 21)
G.add_edge(96, 28)
G.add_edge(96, 29)
G.add_edge(96, 30)
G.add_edge(97, 20)
G.add_edge(97, 21)
G.add_edge(97, 30)
G.add_edge(97, 31)
G.add_edge(98, 27)
G.add_edge(98, 25)
G.add_edge(98, 23)
G.add_edge(98, 19)
G.add_edge(98, 20)
G.add_edge(98, 31)
G.add_edge(98, 32)
G.add_edge(98, 33)
G.add_edge(98, 34)
G.add_edge(99, 34)
G.add_edge(99, 31)
G.add_edge(99, 30)
G.add_edge(99, 29)
G.add_edge(100, 32)
G.add_edge(100, 33)
G.add_edge(100, 35)
G.add_edge(100, 36)
G.add_edge(101, 36)
G.add_edge(101, 33)
G.add_edge(101, 34)
G.add_edge(101, 29)
G.add_edge(101, 28)
G.add_edge(101, 37)
G.add_edge(101, 38)
G.add_edge(101, 39)
G.add_edge(101, 40)
G.add_edge(102, 35)
G.add_edge(102, 36)
G.add_edge(102, 37)
G.add_edge(102, 41)
G.add_edge(103, 40)
G.add_edge(103, 28)
G.add_edge(103, 26)
G.add_edge(103, 27)
G.add_edge(103, 32)
G.add_edge(103, 35)
G.add_edge(103, 41)
G.add_edge(103, 42)
G.add_edge(103, 43)
G.add_edge(104, 43)
G.add_edge(104, 41)
G.add_edge(104, 37)
G.add_edge(104, 38)
G.add_edge(105, 39)
G.add_edge(105, 40)
G.add_edge(105, 42)
G.add_edge(105, 44)
G.add_edge(105, 45)
G.add_edge(105, 46)
G.add_edge(105, 47)
G.add_edge(105, 48)
G.add_edge(105, 49)
G.add_edge(106, 49)
G.add_edge(106, 42)
G.add_edge(106, 43)
G.add_edge(106, 38)
G.add_edge(106, 39)
G.add_edge(106, 44)
G.add_edge(106, 50)
G.add_edge(106, 51)
G.add_edge(106, 52)
G.add_edge(107, 48)
G.add_edge(107, 49)
G.add_edge(107, 50)
G.add_edge(107, 53)
G.add_edge(108, 52)
G.add_edge(108, 44)
G.add_edge(108, 45)
G.add_edge(108, 54)
G.add_edge(109, 47)
G.add_edge(109, 48)
G.add_edge(109, 53)
G.add_edge(109, 55)
G.add_edge(110, 55)
G.add_edge(110, 53)
G.add_edge(110, 50)
G.add_edge(110, 51)
G.add_edge(111, 46)
G.add_edge(111, 47)
G.add_edge(111, 55)
G.add_edge(111, 51)
G.add_edge(111, 52)
G.add_edge(111, 54)
G.add_edge(111, 56)
G.add_edge(111, 57)
G.add_edge(111, 58)
G.add_edge(112, 56)
G.add_edge(112, 57)
G.add_edge(112, 59)
G.add_edge(112, 60)
G.add_edge(113, 60)
G.add_edge(113, 57)
G.add_edge(113, 58)
G.add_edge(113, 61)
G.add_edge(114, 59)
G.add_edge(114, 60)
G.add_edge(114, 61)
G.add_edge(114, 62)
G.add_edge(114, 63)
G.add_edge(114, 64)
G.add_edge(114, 65)
G.add_edge(114, 66)
G.add_edge(114, 67)
G.add_edge(115, 67)
G.add_edge(115, 61)
G.add_edge(115, 58)
G.add_edge(115, 54)
G.add_edge(115, 45)
G.add_edge(115, 46)
G.add_edge(115, 56)
G.add_edge(115, 59)
G.add_edge(115, 62)
G.add_edge(116, 64)
G.add_edge(116, 65)
G.add_edge(116, 68)
G.add_edge(116, 69)
G.add_edge(117, 63)
G.add_edge(117, 64)
G.add_edge(117, 68)
G.add_edge(117, 70)
G.add_edge(118, 70)
G.add_edge(118, 68)
G.add_edge(118, 69)
G.add_edge(118, 71)
G.add_edge(119, 71)
G.add_edge(119, 69)
G.add_edge(119, 65)
G.add_edge(119, 66)
G.add_edge(119, 72)
G.add_edge(119, 73)
G.add_edge(119, 74)
G.add_edge(119, 75)
G.add_edge(119, 76)
G.add_edge(120, 76)
G.add_edge(120, 66)
G.add_edge(120, 67)
G.add_edge(120, 62)
G.add_edge(120, 63)
G.add_edge(120, 70)
G.add_edge(120, 71)
G.add_edge(120, 72)
G.add_edge(120, 77)
G.add_edge(121, 73)
G.add_edge(121, 74)
G.add_edge(121, 78)
G.add_edge(121, 79)
G.add_edge(122, 79)
G.add_edge(122, 74)
G.add_edge(122, 75)
G.add_edge(122, 80)
G.add_edge(123, 78)
G.add_edge(123, 79)
G.add_edge(123, 80)
G.add_edge(123, 81)
G.add_edge(124, 81)
G.add_edge(124, 80)
G.add_edge(124, 75)
G.add_edge(124, 76)
G.add_edge(124, 77)
G.add_edge(124, 82)
G.add_edge(124, 83)
G.add_edge(124, 84)
G.add_edge(124, 85)
G.add_edge(125, 85)
G.add_edge(125, 77)
G.add_edge(125, 72)
G.add_edge(125, 73)
G.add_edge(125, 78)
G.add_edge(125, 81)
G.add_edge(125, 82)
G.add_edge(125, 86)
G.add_edge(125, 87)
G.add_edge(126, 84)
G.add_edge(126, 85)
G.add_edge(126, 86)
G.add_edge(126, 88)
G.add_edge(127, 83)
G.add_edge(127, 84)
G.add_edge(127, 88)
G.add_edge(127, 89)
G.add_edge(128, 89)
G.add_edge(128, 88)
G.add_edge(128, 86)
G.add_edge(128, 87)
G.add_edge(129, 82)
G.add_edge(129, 83)
G.add_edge(129, 89)
G.add_edge(129, 87)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
