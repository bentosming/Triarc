G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 13)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(2, 18)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(4, 17)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(6, 14)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(9, 10)
G.add_edge(9, 14)
G.add_edge(10, 11)
G.add_edge(11, 12)
G.add_edge(11, 15)
G.add_edge(12, 13)
G.add_edge(13, 16)
G.add_edge(14, 15)
G.add_edge(15, 16)
G.add_edge(16, 19)
G.add_edge(17, 18)
G.add_edge(17, 23)
G.add_edge(18, 24)
G.add_edge(19, 20)
G.add_edge(19, 28)
G.add_edge(20, 21)
G.add_edge(20, 41)
G.add_edge(21, 22)
G.add_edge(21, 36)
G.add_edge(22, 23)
G.add_edge(22, 32)
G.add_edge(23, 29)
G.add_edge(24, 25)
G.add_edge(24, 29)
G.add_edge(25, 26)
G.add_edge(25, 30)
G.add_edge(26, 27)
G.add_edge(26, 33)
G.add_edge(27, 28)
G.add_edge(27, 38)
G.add_edge(28, 39)
G.add_edge(29, 31)
G.add_edge(30, 31)
G.add_edge(30, 34)
G.add_edge(31, 32)
G.add_edge(32, 35)
G.add_edge(33, 34)
G.add_edge(33, 37)
G.add_edge(34, 35)
G.add_edge(35, 36)
G.add_edge(36, 37)
G.add_edge(37, 38)
G.add_edge(38, 40)
G.add_edge(39, 40)
G.add_edge(39, 41)
G.add_edge(40, 43)
G.add_edge(41, 42)
G.add_edge(42, 43)
G.add_edge(42, 46)
G.add_edge(43, 44)
G.add_edge(44, 45)
G.add_edge(44, 51)
G.add_edge(45, 46)
G.add_edge(45, 49)
G.add_edge(46, 47)
G.add_edge(47, 48)
G.add_edge(47, 54)
G.add_edge(48, 49)
G.add_edge(48, 52)
G.add_edge(49, 50)
G.add_edge(50, 51)
G.add_edge(50, 53)
G.add_edge(51, 56)
G.add_edge(52, 53)
G.add_edge(52, 55)
G.add_edge(53, 61)
G.add_edge(54, 55)
G.add_edge(54, 60)
G.add_edge(55, 62)
G.add_edge(56, 57)
G.add_edge(56, 61)
G.add_edge(57, 58)
G.add_edge(57, 71)
G.add_edge(58, 59)
G.add_edge(58, 65)
G.add_edge(59, 60)
G.add_edge(59, 63)
G.add_edge(60, 66)
G.add_edge(61, 62)
G.add_edge(62, 82)
G.add_edge(63, 64)
G.add_edge(63, 67)
G.add_edge(64, 65)
G.add_edge(64, 69)
G.add_edge(65, 70)
G.add_edge(66, 67)
G.add_edge(66, 75)
G.add_edge(67, 68)
G.add_edge(68, 69)
G.add_edge(68, 73)
G.add_edge(69, 72)
G.add_edge(70, 71)
G.add_edge(70, 72)
G.add_edge(71, 76)
G.add_edge(72, 74)
G.add_edge(73, 74)
G.add_edge(73, 75)
G.add_edge(74, 76)
G.add_edge(75, 77)
G.add_edge(76, 77)
G.add_edge(77, 78)
G.add_edge(78, 79)
G.add_edge(78, 85)
G.add_edge(79, 80)
G.add_edge(79, 92)
G.add_edge(80, 81)
G.add_edge(80, 97)
G.add_edge(81, 82)
G.add_edge(81, 87)
G.add_edge(82, 83)
G.add_edge(83, 84)
G.add_edge(83, 86)
G.add_edge(84, 85)
G.add_edge(84, 88)
G.add_edge(85, 90)
G.add_edge(86, 87)
G.add_edge(86, 89)
G.add_edge(87, 96)
G.add_edge(88, 89)
G.add_edge(88, 91)
G.add_edge(89, 95)
G.add_edge(90, 91)
G.add_edge(90, 92)
G.add_edge(91, 94)
G.add_edge(92, 93)
G.add_edge(93, 94)
G.add_edge(93, 97)
G.add_edge(94, 95)
G.add_edge(95, 96)
G.add_edge(96, 97)
outerSize=14
countOfVertices=98
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(98, 9)
G.add_edge(98, 8)
G.add_edge(98, 7)
G.add_edge(98, 6)
G.add_edge(98, 14)
G.add_edge(99, 11)
G.add_edge(99, 10)
G.add_edge(99, 9)
G.add_edge(99, 14)
G.add_edge(99, 15)
G.add_edge(100, 13)
G.add_edge(100, 12)
G.add_edge(100, 11)
G.add_edge(100, 15)
G.add_edge(100, 16)
G.add_edge(101, 4)
G.add_edge(101, 3)
G.add_edge(101, 2)
G.add_edge(101, 17)
G.add_edge(101, 18)
G.add_edge(102, 16)
G.add_edge(102, 15)
G.add_edge(102, 14)
G.add_edge(102, 6)
G.add_edge(102, 5)
G.add_edge(102, 4)
G.add_edge(102, 17)
G.add_edge(102, 19)
G.add_edge(102, 20)
G.add_edge(102, 21)
G.add_edge(102, 22)
G.add_edge(102, 23)
G.add_edge(103, 18)
G.add_edge(103, 2)
G.add_edge(103, 1)
G.add_edge(103, 0)
G.add_edge(103, 13)
G.add_edge(103, 16)
G.add_edge(103, 19)
G.add_edge(103, 24)
G.add_edge(103, 25)
G.add_edge(103, 26)
G.add_edge(103, 27)
G.add_edge(103, 28)
G.add_edge(104, 24)
G.add_edge(104, 18)
G.add_edge(104, 17)
G.add_edge(104, 23)
G.add_edge(104, 29)
G.add_edge(105, 25)
G.add_edge(105, 24)
G.add_edge(105, 29)
G.add_edge(105, 30)
G.add_edge(105, 31)
G.add_edge(106, 31)
G.add_edge(106, 29)
G.add_edge(106, 23)
G.add_edge(106, 22)
G.add_edge(106, 32)
G.add_edge(107, 26)
G.add_edge(107, 25)
G.add_edge(107, 30)
G.add_edge(107, 33)
G.add_edge(107, 34)
G.add_edge(108, 34)
G.add_edge(108, 30)
G.add_edge(108, 31)
G.add_edge(108, 32)
G.add_edge(108, 35)
G.add_edge(109, 35)
G.add_edge(109, 32)
G.add_edge(109, 22)
G.add_edge(109, 21)
G.add_edge(109, 36)
G.add_edge(110, 33)
G.add_edge(110, 34)
G.add_edge(110, 35)
G.add_edge(110, 36)
G.add_edge(110, 37)
G.add_edge(111, 27)
G.add_edge(111, 26)
G.add_edge(111, 33)
G.add_edge(111, 37)
G.add_edge(111, 38)
G.add_edge(112, 28)
G.add_edge(112, 27)
G.add_edge(112, 38)
G.add_edge(112, 39)
G.add_edge(112, 40)
G.add_edge(113, 20)
G.add_edge(113, 19)
G.add_edge(113, 28)
G.add_edge(113, 39)
G.add_edge(113, 41)
G.add_edge(114, 41)
G.add_edge(114, 39)
G.add_edge(114, 40)
G.add_edge(114, 42)
G.add_edge(114, 43)
G.add_edge(115, 43)
G.add_edge(115, 40)
G.add_edge(115, 38)
G.add_edge(115, 37)
G.add_edge(115, 36)
G.add_edge(115, 21)
G.add_edge(115, 20)
G.add_edge(115, 41)
G.add_edge(115, 42)
G.add_edge(115, 44)
G.add_edge(115, 45)
G.add_edge(115, 46)
G.add_edge(116, 46)
G.add_edge(116, 45)
G.add_edge(116, 47)
G.add_edge(116, 48)
G.add_edge(116, 49)
G.add_edge(117, 49)
G.add_edge(117, 45)
G.add_edge(117, 44)
G.add_edge(117, 50)
G.add_edge(117, 51)
G.add_edge(118, 48)
G.add_edge(118, 49)
G.add_edge(118, 50)
G.add_edge(118, 52)
G.add_edge(118, 53)
G.add_edge(119, 47)
G.add_edge(119, 48)
G.add_edge(119, 52)
G.add_edge(119, 54)
G.add_edge(119, 55)
G.add_edge(120, 51)
G.add_edge(120, 44)
G.add_edge(120, 43)
G.add_edge(120, 42)
G.add_edge(120, 46)
G.add_edge(120, 47)
G.add_edge(120, 54)
G.add_edge(120, 56)
G.add_edge(120, 57)
G.add_edge(120, 58)
G.add_edge(120, 59)
G.add_edge(120, 60)
G.add_edge(121, 56)
G.add_edge(121, 51)
G.add_edge(121, 50)
G.add_edge(121, 53)
G.add_edge(121, 61)
G.add_edge(122, 61)
G.add_edge(122, 53)
G.add_edge(122, 52)
G.add_edge(122, 55)
G.add_edge(122, 62)
G.add_edge(123, 59)
G.add_edge(123, 58)
G.add_edge(123, 63)
G.add_edge(123, 64)
G.add_edge(123, 65)
G.add_edge(124, 60)
G.add_edge(124, 59)
G.add_edge(124, 63)
G.add_edge(124, 66)
G.add_edge(124, 67)
G.add_edge(125, 67)
G.add_edge(125, 63)
G.add_edge(125, 64)
G.add_edge(125, 68)
G.add_edge(125, 69)
G.add_edge(126, 65)
G.add_edge(126, 58)
G.add_edge(126, 57)
G.add_edge(126, 70)
G.add_edge(126, 71)
G.add_edge(127, 69)
G.add_edge(127, 64)
G.add_edge(127, 65)
G.add_edge(127, 70)
G.add_edge(127, 72)
G.add_edge(128, 68)
G.add_edge(128, 69)
G.add_edge(128, 72)
G.add_edge(128, 73)
G.add_edge(128, 74)
G.add_edge(129, 66)
G.add_edge(129, 67)
G.add_edge(129, 68)
G.add_edge(129, 73)
G.add_edge(129, 75)
G.add_edge(130, 74)
G.add_edge(130, 72)
G.add_edge(130, 70)
G.add_edge(130, 71)
G.add_edge(130, 76)
G.add_edge(131, 75)
G.add_edge(131, 73)
G.add_edge(131, 74)
G.add_edge(131, 76)
G.add_edge(131, 77)
G.add_edge(132, 77)
G.add_edge(132, 76)
G.add_edge(132, 71)
G.add_edge(132, 57)
G.add_edge(132, 56)
G.add_edge(132, 61)
G.add_edge(132, 62)
G.add_edge(132, 78)
G.add_edge(132, 79)
G.add_edge(132, 80)
G.add_edge(132, 81)
G.add_edge(132, 82)
G.add_edge(133, 82)
G.add_edge(133, 62)
G.add_edge(133, 55)
G.add_edge(133, 54)
G.add_edge(133, 60)
G.add_edge(133, 66)
G.add_edge(133, 75)
G.add_edge(133, 77)
G.add_edge(133, 78)
G.add_edge(133, 83)
G.add_edge(133, 84)
G.add_edge(133, 85)
G.add_edge(134, 83)
G.add_edge(134, 82)
G.add_edge(134, 81)
G.add_edge(134, 86)
G.add_edge(134, 87)
G.add_edge(135, 84)
G.add_edge(135, 83)
G.add_edge(135, 86)
G.add_edge(135, 88)
G.add_edge(135, 89)
G.add_edge(136, 85)
G.add_edge(136, 84)
G.add_edge(136, 88)
G.add_edge(136, 90)
G.add_edge(136, 91)
G.add_edge(137, 79)
G.add_edge(137, 78)
G.add_edge(137, 85)
G.add_edge(137, 90)
G.add_edge(137, 92)
G.add_edge(138, 92)
G.add_edge(138, 90)
G.add_edge(138, 91)
G.add_edge(138, 93)
G.add_edge(138, 94)
G.add_edge(139, 94)
G.add_edge(139, 91)
G.add_edge(139, 88)
G.add_edge(139, 89)
G.add_edge(139, 95)
G.add_edge(140, 95)
G.add_edge(140, 89)
G.add_edge(140, 86)
G.add_edge(140, 87)
G.add_edge(140, 96)
G.add_edge(141, 93)
G.add_edge(141, 94)
G.add_edge(141, 95)
G.add_edge(141, 96)
G.add_edge(141, 97)
G.add_edge(142, 97)
G.add_edge(142, 96)
G.add_edge(142, 87)
G.add_edge(142, 81)
G.add_edge(142, 80)
G.add_edge(143, 79)
G.add_edge(143, 92)
G.add_edge(143, 93)
G.add_edge(143, 97)
G.add_edge(143, 80)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
