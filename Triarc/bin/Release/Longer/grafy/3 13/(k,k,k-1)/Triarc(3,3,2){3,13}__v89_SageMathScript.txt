G = Graph()
G.add_edge(0, 1)
G.add_edge(0, 15)
G.add_edge(1, 2)
G.add_edge(2, 3)
G.add_edge(2, 4)
G.add_edge(3, 4)
G.add_edge(4, 5)
G.add_edge(5, 6)
G.add_edge(6, 7)
G.add_edge(7, 8)
G.add_edge(8, 9)
G.add_edge(8, 18)
G.add_edge(9, 10)
G.add_edge(10, 11)
G.add_edge(10, 25)
G.add_edge(11, 12)
G.add_edge(12, 13)
G.add_edge(13, 14)
G.add_edge(14, 15)
G.add_edge(14, 16)
G.add_edge(16, 17)
G.add_edge(16, 19)
G.add_edge(17, 18)
G.add_edge(17, 19)
G.add_edge(18, 27)
G.add_edge(19, 20)
G.add_edge(20, 21)
G.add_edge(20, 33)
G.add_edge(21, 22)
G.add_edge(21, 31)
G.add_edge(22, 23)
G.add_edge(22, 31)
G.add_edge(23, 24)
G.add_edge(23, 26)
G.add_edge(24, 25)
G.add_edge(24, 26)
G.add_edge(25, 26)
G.add_edge(27, 28)
G.add_edge(27, 32)
G.add_edge(28, 29)
G.add_edge(28, 32)
G.add_edge(29, 30)
G.add_edge(29, 32)
G.add_edge(30, 31)
G.add_edge(30, 37)
G.add_edge(33, 34)
G.add_edge(33, 39)
G.add_edge(34, 35)
G.add_edge(34, 39)
G.add_edge(35, 36)
G.add_edge(35, 51)
G.add_edge(36, 37)
G.add_edge(36, 38)
G.add_edge(37, 38)
G.add_edge(38, 44)
G.add_edge(39, 40)
G.add_edge(40, 41)
G.add_edge(40, 46)
G.add_edge(41, 42)
G.add_edge(41, 46)
G.add_edge(42, 43)
G.add_edge(42, 45)
G.add_edge(43, 44)
G.add_edge(43, 45)
G.add_edge(44, 45)
G.add_edge(46, 47)
G.add_edge(47, 48)
G.add_edge(47, 53)
G.add_edge(48, 49)
G.add_edge(48, 53)
G.add_edge(49, 50)
G.add_edge(49, 59)
G.add_edge(50, 51)
G.add_edge(50, 52)
G.add_edge(51, 52)
G.add_edge(52, 57)
G.add_edge(53, 54)
G.add_edge(54, 55)
G.add_edge(54, 64)
G.add_edge(55, 56)
G.add_edge(55, 58)
G.add_edge(56, 57)
G.add_edge(56, 58)
G.add_edge(57, 58)
G.add_edge(59, 60)
G.add_edge(59, 65)
G.add_edge(60, 61)
G.add_edge(60, 65)
G.add_edge(61, 62)
G.add_edge(61, 65)
G.add_edge(62, 63)
G.add_edge(62, 69)
G.add_edge(63, 64)
G.add_edge(63, 66)
G.add_edge(64, 66)
G.add_edge(66, 67)
G.add_edge(67, 68)
G.add_edge(67, 70)
G.add_edge(68, 69)
G.add_edge(68, 70)
G.add_edge(69, 77)
G.add_edge(70, 71)
G.add_edge(71, 72)
G.add_edge(71, 80)
G.add_edge(72, 73)
G.add_edge(72, 80)
G.add_edge(73, 74)
G.add_edge(73, 78)
G.add_edge(74, 75)
G.add_edge(74, 78)
G.add_edge(75, 76)
G.add_edge(75, 78)
G.add_edge(76, 77)
G.add_edge(76, 79)
G.add_edge(77, 79)
G.add_edge(79, 81)
G.add_edge(80, 86)
G.add_edge(81, 82)
G.add_edge(81, 87)
G.add_edge(82, 83)
G.add_edge(82, 87)
G.add_edge(83, 84)
G.add_edge(83, 87)
G.add_edge(84, 85)
G.add_edge(84, 88)
G.add_edge(85, 86)
G.add_edge(85, 88)
G.add_edge(86, 88)
outerSize=16
countOfVertices=89
#Now adding vertices for each face, so that the graph is 3-connected.
G.add_edge(89, 2)
G.add_edge(89, 3)
G.add_edge(89, 4)
G.add_edge(90, 14)
G.add_edge(90, 15)
G.add_edge(90, 0)
G.add_edge(90, 1)
G.add_edge(90, 2)
G.add_edge(90, 4)
G.add_edge(90, 5)
G.add_edge(90, 6)
G.add_edge(90, 7)
G.add_edge(90, 8)
G.add_edge(90, 16)
G.add_edge(90, 17)
G.add_edge(90, 18)
G.add_edge(91, 16)
G.add_edge(91, 17)
G.add_edge(91, 19)
G.add_edge(92, 19)
G.add_edge(92, 16)
G.add_edge(92, 14)
G.add_edge(92, 13)
G.add_edge(92, 12)
G.add_edge(92, 11)
G.add_edge(92, 10)
G.add_edge(92, 20)
G.add_edge(92, 21)
G.add_edge(92, 22)
G.add_edge(92, 23)
G.add_edge(92, 24)
G.add_edge(92, 25)
G.add_edge(93, 24)
G.add_edge(93, 23)
G.add_edge(93, 26)
G.add_edge(94, 26)
G.add_edge(94, 24)
G.add_edge(94, 25)
G.add_edge(95, 18)
G.add_edge(95, 8)
G.add_edge(95, 9)
G.add_edge(95, 10)
G.add_edge(95, 25)
G.add_edge(95, 26)
G.add_edge(95, 23)
G.add_edge(95, 22)
G.add_edge(95, 27)
G.add_edge(95, 28)
G.add_edge(95, 29)
G.add_edge(95, 30)
G.add_edge(95, 31)
G.add_edge(96, 31)
G.add_edge(96, 22)
G.add_edge(96, 21)
G.add_edge(97, 28)
G.add_edge(97, 29)
G.add_edge(97, 32)
G.add_edge(98, 32)
G.add_edge(98, 28)
G.add_edge(98, 27)
G.add_edge(99, 20)
G.add_edge(99, 19)
G.add_edge(99, 17)
G.add_edge(99, 18)
G.add_edge(99, 27)
G.add_edge(99, 32)
G.add_edge(99, 29)
G.add_edge(99, 30)
G.add_edge(99, 33)
G.add_edge(99, 34)
G.add_edge(99, 35)
G.add_edge(99, 36)
G.add_edge(99, 37)
G.add_edge(100, 37)
G.add_edge(100, 36)
G.add_edge(100, 38)
G.add_edge(101, 33)
G.add_edge(101, 34)
G.add_edge(101, 39)
G.add_edge(102, 39)
G.add_edge(102, 33)
G.add_edge(102, 20)
G.add_edge(102, 21)
G.add_edge(102, 31)
G.add_edge(102, 30)
G.add_edge(102, 37)
G.add_edge(102, 38)
G.add_edge(102, 40)
G.add_edge(102, 41)
G.add_edge(102, 42)
G.add_edge(102, 43)
G.add_edge(102, 44)
G.add_edge(103, 43)
G.add_edge(103, 42)
G.add_edge(103, 45)
G.add_edge(104, 44)
G.add_edge(104, 43)
G.add_edge(104, 45)
G.add_edge(105, 41)
G.add_edge(105, 40)
G.add_edge(105, 46)
G.add_edge(106, 46)
G.add_edge(106, 41)
G.add_edge(106, 42)
G.add_edge(106, 45)
G.add_edge(106, 44)
G.add_edge(106, 38)
G.add_edge(106, 36)
G.add_edge(106, 35)
G.add_edge(106, 47)
G.add_edge(106, 48)
G.add_edge(106, 49)
G.add_edge(106, 50)
G.add_edge(106, 51)
G.add_edge(107, 51)
G.add_edge(107, 50)
G.add_edge(107, 52)
G.add_edge(108, 47)
G.add_edge(108, 46)
G.add_edge(108, 40)
G.add_edge(108, 39)
G.add_edge(108, 34)
G.add_edge(108, 35)
G.add_edge(108, 51)
G.add_edge(108, 52)
G.add_edge(108, 53)
G.add_edge(108, 54)
G.add_edge(108, 55)
G.add_edge(108, 56)
G.add_edge(108, 57)
G.add_edge(109, 53)
G.add_edge(109, 47)
G.add_edge(109, 48)
G.add_edge(110, 56)
G.add_edge(110, 55)
G.add_edge(110, 58)
G.add_edge(111, 57)
G.add_edge(111, 56)
G.add_edge(111, 58)
G.add_edge(112, 49)
G.add_edge(112, 50)
G.add_edge(112, 52)
G.add_edge(112, 57)
G.add_edge(112, 58)
G.add_edge(112, 55)
G.add_edge(112, 54)
G.add_edge(112, 59)
G.add_edge(112, 60)
G.add_edge(112, 61)
G.add_edge(112, 62)
G.add_edge(112, 63)
G.add_edge(112, 64)
G.add_edge(113, 60)
G.add_edge(113, 61)
G.add_edge(113, 65)
G.add_edge(114, 65)
G.add_edge(114, 60)
G.add_edge(114, 59)
G.add_edge(115, 64)
G.add_edge(115, 54)
G.add_edge(115, 53)
G.add_edge(115, 48)
G.add_edge(115, 49)
G.add_edge(115, 59)
G.add_edge(115, 65)
G.add_edge(115, 61)
G.add_edge(115, 62)
G.add_edge(115, 66)
G.add_edge(115, 67)
G.add_edge(115, 68)
G.add_edge(115, 69)
G.add_edge(116, 63)
G.add_edge(116, 64)
G.add_edge(116, 66)
G.add_edge(117, 67)
G.add_edge(117, 68)
G.add_edge(117, 70)
G.add_edge(118, 70)
G.add_edge(118, 67)
G.add_edge(118, 66)
G.add_edge(118, 63)
G.add_edge(118, 62)
G.add_edge(118, 69)
G.add_edge(118, 71)
G.add_edge(118, 72)
G.add_edge(118, 73)
G.add_edge(118, 74)
G.add_edge(118, 75)
G.add_edge(118, 76)
G.add_edge(118, 77)
G.add_edge(119, 75)
G.add_edge(119, 74)
G.add_edge(119, 78)
G.add_edge(120, 73)
G.add_edge(120, 74)
G.add_edge(120, 78)
G.add_edge(121, 77)
G.add_edge(121, 76)
G.add_edge(121, 79)
G.add_edge(122, 72)
G.add_edge(122, 71)
G.add_edge(122, 80)
G.add_edge(123, 79)
G.add_edge(123, 76)
G.add_edge(123, 75)
G.add_edge(123, 78)
G.add_edge(123, 73)
G.add_edge(123, 72)
G.add_edge(123, 80)
G.add_edge(123, 81)
G.add_edge(123, 82)
G.add_edge(123, 83)
G.add_edge(123, 84)
G.add_edge(123, 85)
G.add_edge(123, 86)
G.add_edge(124, 82)
G.add_edge(124, 83)
G.add_edge(124, 87)
G.add_edge(125, 87)
G.add_edge(125, 82)
G.add_edge(125, 81)
G.add_edge(126, 86)
G.add_edge(126, 80)
G.add_edge(126, 71)
G.add_edge(126, 70)
G.add_edge(126, 68)
G.add_edge(126, 69)
G.add_edge(126, 77)
G.add_edge(126, 79)
G.add_edge(126, 81)
G.add_edge(126, 87)
G.add_edge(126, 83)
G.add_edge(126, 84)
G.add_edge(126, 88)
G.add_edge(127, 85)
G.add_edge(127, 86)
G.add_edge(127, 88)
G.add_edge(128, 84)
G.add_edge(128, 85)
G.add_edge(128, 88)
def scaling(x,i,j,n):
    return x*(n-j)

A = G.adjacency_matrix();

n = G.num_verts()
Munscaled = matrix(QQ, n,n, lambda i,j:-A[i,j]/G.degree(i) if i>=outerSize else 0) + identity_matrix(n)
M=matrix(QQ,n,n,lambda i,j: scaling(Munscaled[i,j],i,j,n) if i>j & i<countOfVertices else Munscaled[i,j])
jednicky = matrix(QQ,n,1,lambda i,j: -1)
soucty = M*jednicky
for i in range (n-outerSize):
    M[i+outerSize,i+outerSize]+=soucty[i+outerSize,0]

vy = matrix(QQ,n,1, lambda i,j:round(sin(i/outerSize*2*pi)*1000) if i<outerSize else 0)
vx = matrix(QQ,n,1, lambda i,j:round(cos(i/outerSize*2*pi)*1000) if i<outerSize else 0)
resX=M.inverse() * vx
resY=M.inverse()*vy
i=0
d=[[resX[i],resY[i]] for i in range(n)]

G.graphplot(save_pos=True)
dd=G.get_pos()

for i in range(n):
    dd[i]=[resX[i,0],resY[i,0]]

G.set_pos(dd)
#removing vertices that were used to make graph 3-connected
ran = range(countOfVertices, n)
G.delete_vertices(ran)
G.show()
